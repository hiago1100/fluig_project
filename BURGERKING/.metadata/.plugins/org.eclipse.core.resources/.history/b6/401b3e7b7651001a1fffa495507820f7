
function createDataset(fields, constraints, sortFields) {
	var dataset = DatasetBuilder.newDataset();
	criarEstrutura(dataset);
	
	try{
		
		var uf = findConstraint("UF",constraints,""); 
		
		var descricao = findConstraint("DESCRICAO",constraints,""); 

		log.info("*** LOG antes dos if uf: " + uf );
		log.info("*** LOG antes dos if uf: " + descricao );
		

	    log.info("*** LOG uf: " + uf );
	    var constraintOne = DatasetFactory.createConstraint("UF", uf, uf, ConstraintType.MUST);
	    var constraints = new Array(constraintOne);
	    var operadoresSubGrupos = DatasetFactory.getDataset("dsOperadoresSubGrupos", null, constraints, null);
	    
	    
	    for(var i = 0; i < operadoresSubGrupos.rowsCount; i++) {
	    	
	    	log.info("*** LOG subgrupo: " +  operadoresSubGrupos.getValue(i, "subgrupo") );
	    	log.info("*** LOG descricao: " +  descricao );
	    	var constraintOperadoresUm = DatasetFactory.createConstraint("subgrupo", operadoresSubGrupos.getValue(i, "subgrupo"), operadoresSubGrupos.getValue(i, "subgrupo"), ConstraintType.MUST);
			var constraintOperadoresDois = DatasetFactory.createConstraint("descricao", descricao, descricao, ConstraintType.MUST);
			var constraintsOperadores = new Array(constraintOperadoresUm, constraintOperadoresDois);
		    var operadores = DatasetFactory.getDataset("dsOperadoresTransporte", null, constraintsOperadores, null);
	    	
		    for(var x = 0; x < operadores.rowsCount; x++) {
		    	
		    	log.error("*** LOG descricao: "+ operadores.getValue(x, "descricao"));

		    	dataset.addRow(new Array(
	    			operadores.getValue(x, "descricao"),
	    			operadores.getValue(x, "subgrupo"),
	    			operadores.getValue(x, "codigo"),
	    			operadores.getValue(x, "unitario"),    			
	    			operadoresSubGrupos.getValue(i, "uf")
		    	));
		    	

		    	
		    }
		    
	    		    	
	    }
	    
	} catch (e){
        var mensagemErro = e;
        log.error("*** ERRO NO DATASET: "+mensagemErro);
        
        dataset = DatasetBuilder.newDataset();
        dataset.addColumn("ERROR");
        dataset.addColumn("MESSAGE_ERROR");
        dataset.addRow(new Array(-1, mensagemErro));	
	}
	return dataset;
	

}

function criarEstrutura(dataset){
	dataset.addColumn("OPERADOR", DatasetFieldType.STRING);
	dataset.addColumn("SUBGRUPO", DatasetFieldType.STRING);
	dataset.addColumn("CODIGO", DatasetFieldType.STRING);
	dataset.addColumn("UNITARIO", DatasetFieldType.NUMBER);
	dataset.addColumn("UF", DatasetFieldType.STRING);
}

function findConstraint(fieldName, constraints, defaultValue) {
     if (constraints != null) {
      
      for (var i=0; i<constraints.length; i++){
       log.info("***CONSTRAN : " + constraints[i].fieldName );
       log.info("***CONSTRAN2 : " + constraints[i].initialValue);
       if (constraints[i].fieldName == fieldName){
        return constraints[i].initialValue;
       }
      }
     }
     return defaultValue;
    }
