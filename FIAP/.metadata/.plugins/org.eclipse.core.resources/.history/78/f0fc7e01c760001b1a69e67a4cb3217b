function defineStructure() {
}
function onSync(lastSyncDate) {
}
//inicio
function createDataset(fields, constraints, sortFields) {
    var newDataset = DatasetBuilder.newDataset();
    var dataSource = "/jdbc/FluigDSRO";
    var ic = new javax.naming.InitialContext();
    var ds = ic.lookup(dataSource);
    var created = false;
    

    var myQuery = "Select DISTINCT(c.num_proces), v.num_seq,x.num_seq_estado, u.status, case STATUS "+
    "when 0 then 'Aberto' when 2 then 'Finalizado' when 1 then 'Cancelado' "+
    "else '' end as den_status,case when STATUS = 0 "+
    "and t.deadline < GETDATE() then 'Atrasado' when "+
    "STATUS = 0 then v.DES_ESTADO when STATUS = 2 then 'Finalizado' when "+ 
    "STATUS = 1 then 'Cancelado' else '' end as den_status_processo, "+ 
    "ISNULL(t.deadline,'') as prazo_tarefa, t.deadline as deadline, "+
   "a.txt_Nome ,Convert(varchar(10), a.dt_dataSolicitacao,103) AS [dataSolicitacao], a.txt_tituloMudanca, " +
   "Convert(varchar(10), a.txt_dataInicial,103) AS [Data txtDataInicial] , Convert(varchar(10), a.dt_dataFinal,103) AS [Data txtDataFinal], a.txt_totalHoras, a.classificacao, " +
   "a.motivo_melhoria, a.motivo_preventiva, a.motivo_projeto, a.motivo_legal, " +
   "a.tipo_dadosbancarios, a.tipo_SI, a.tipo_aplicacao, a.tipo_telecom, " +
   "a.tipo_segurancaInformacao, a.tipo_imac, a.tipo_telecomVoz, a.tipo_distribuicaoPacotes, "+
   "a.ambiente_dataCenterAllianzBR, a.ambiente_callCenter, a.ambiente_level3, a.ambiente_Infraestrutura, "+
   "a.necessario_pci, a.radio_severidade, a.indisponibilidade_dataInicial, a.indisponibilidade_dataFinal, "+
   "a.indisponibilidade_totalHoras, a.responsavel_fornecedor, a.responsavel_diretoriaTI, "+
   "a.responsavel_areaNegocios, a.responsavel_diretoriaNegocios "+	
    "from ML001010 a  "+
    "join documento b on ( b.COD_EMPRESA = a.companyid and b.NR_DOCUMENTO = a.documentid and b.NR_VERSAO = a.version and b.VERSAO_ATIVA = 1 ) "+
    "join anexo_proces c on (c.cod_empresa = b.cod_empresa and c.NR_DOCUMENTO = b.NR_DOCUMENTO and c.NR_VERSAO = b.NR_VERSAO)  "+
    "join proces_workflow u on ( u.COD_EMPRESA = c.COD_EMPRESA and u.NUM_PROCES = c.NUM_PROCES ) "+
    "left join tar_proces t on (t.COD_EMPRESA = c.COD_EMPRESA and t.NUM_PROCES = c.NUM_PROCES and t.LOG_ATIV = '1' ) "+
    "left join histor_proces x on (x.COD_EMPRESA = t.COD_EMPRESA and x.NUM_PROCES = t.NUM_PROCES and x.NUM_SEQ_MOVTO = t.NUM_SEQ_MOVTO) "+
    "left join estado_proces v on (v.COD_EMPRESA = t.COD_EMPRESA and v.COD_DEF_PROCES = u.COD_DEF_PROCES and v.NUM_SEQ = x.NUM_SEQ_ESTADO and v.NUM_VERS = u.NUM_VERS) "+
    "WHERE a.dt_dataSolicitacao = '2021-01-19' AND a.txt_nome = 'Euclides Bezerra' AND "+
    " c.num_proces = '7167' AND a.txt_tituloMudanca LIKE '%Correção %' AND u.den_status = 'Aberto' ";
//    
//    
   // var myQuery = "SELECT TOP 50 * FROM tar_proces";


    try {
    	
        var conn = ds.getConnection();
        var stmt = conn.createStatement();
        var rs = stmt.executeQuery(myQuery);
        var columnCount = rs.getMetaData().getColumnCount();
        while (rs.next()) {
            if (!created) {
                for (var i = 1; i <= columnCount; i++) {
                    newDataset.addColumn(rs.getMetaData().getColumnName(i));
                }
                created = true;
            }
            var Arr = new Array();
            for (var i = 1; i <= columnCount; i++) {
                var obj = rs.getObject(rs.getMetaData().getColumnName(i));
                if (null != obj) {
                    Arr[i - 1] = rs.getObject(rs.getMetaData().getColumnName(i)).toString();
                } else {
                    Arr[i - 1] = "null";
                }
            }
            newDataset.addRow(Arr);
        }
    } catch (e) {
	log.info("deu_erro");
        log.error("ERRO==============> " + e.message);
    } finally {
        if (stmt != null) {
            stmt.close();
        }
        if (conn != null) {
            conn.close();
        }
    }
    return newDataset;
}

//fim
function onMobileSync(user) {

}

function findConstraint(fieldName, constraints, defaultValue) {
    if (constraints != null) {
        for (var i = 0; i < constraints.length; i++) {
            if (constraints[i].fieldName == fieldName) {
                return constraints[i].initialValue;
            }
        }
    }
    return defaultValue;
}