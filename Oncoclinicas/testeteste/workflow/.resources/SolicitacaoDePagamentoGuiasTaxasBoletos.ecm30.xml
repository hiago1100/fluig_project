<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
    </processDefinitionPK>
    <processDescription>Solicitação de Pagamentos</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Contas a Pagar</categoryId>
    <managerEngineAllocationId>Associado</managerEngineAllocationId>
    <managerEngineAllocationConfiguration>&lt;AssociatedController ConditionAssociated=&quot;OR&quot;&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;Central_Atendimento&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_II&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_CP&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;COORD_FIS&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;ControlXML TypeAssociated=&quot;Grupo&quot;&gt;&lt;AssignmentController&gt;&lt;Group&gt;TISUPORTE&lt;/Group&gt;&lt;/AssignmentController&gt;&lt;/ControlXML&gt;&lt;/AssociatedController&gt;</managerEngineAllocationConfiguration>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>0</complementsLevel>
    <notifyRequisitionerComplements>false</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>false</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Solicitação de Pagamentos</processId>
      <version>15</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>1201341</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>8</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>36</positionX>
      <positionY>55</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>9</sequence>
      </processStatePK>
      <stateName>Avaliação pelo Gestor</stateName>
      <stateDescription>Avaliação pelo Gestor</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA9</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;proximoAprovador&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>288</positionX>
      <positionY>183</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>true</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>11</sequence>
      </processStatePK>
      <stateName>Validação Fiscal</stateName>
      <stateDescription>Validação Fiscal</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA11</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;VAL_FIS&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>468</positionX>
      <positionY>334</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>12</sequence>
      </processStatePK>
      <stateName>Corrigir Solicitação</stateName>
      <stateDescription>Corrigir Solicitação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA12</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;8&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>636</positionX>
      <positionY>39</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId>Default</periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>13</sequence>
      </processStatePK>
      <stateName>Validar e Programar Pagamento</stateName>
      <stateDescription>Validar e Programar Pagamento</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA13</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;FIN&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>637</positionX>
      <positionY>444</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>15</sequence>
      </processStatePK>
      <stateName>Aprovação do Solicitante</stateName>
      <stateDescription>Aprovação do Solicitante</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA15</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;8&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>637</positionX>
      <positionY>684</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>true</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>16</sequence>
      </processStatePK>
      <stateName>Solução da Inconsistência</stateName>
      <stateDescription>Solução da Inconsistência</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA16</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;INC_lancDeNFPagamento&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>636</positionX>
      <positionY>792</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>true</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>43</sequence>
      </processStatePK>
      <stateName>Atribuir Responsável</stateName>
      <stateDescription>Atribuir Responsável</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>SLA43</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>240</positionX>
      <positionY>38</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>68</sequence>
      </processStatePK>
      <stateName>Serviço</stateName>
      <stateDescription>Serviço</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>108</positionX>
      <positionY>45</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>72</sequence>
      </processStatePK>
      <stateName>Inconsistentcia de dados</stateName>
      <stateDescription>Inconsistentcia de dados</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>36</positionX>
      <positionY>155</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>71</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>108</positionX>
      <positionY>83</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>68</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>18</sequence>
      </processStatePK>
      <stateName>Aprovado?</stateName>
      <stateDescription>Aprovado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>492</positionX>
      <positionY>167</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>27</sequence>
      </processStatePK>
      <stateName>Aprovado?</stateName>
      <stateDescription>Aprovado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>660</positionX>
      <positionY>311</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>37</sequence>
      </processStatePK>
      <stateName>Aprovado?</stateName>
      <stateDescription>Aprovado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>816</positionX>
      <positionY>726</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>46</sequence>
      </processStatePK>
      <stateName>Apenas Boleto?</stateName>
      <stateDescription>Apenas Boleto?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>156</positionX>
      <positionY>167</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>55</sequence>
      </processStatePK>
      <stateName>Aprovado?</stateName>
      <stateDescription>Aprovado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>660</positionX>
      <positionY>540</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>40</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>948</positionX>
      <positionY>759</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>1</expressionOrder>
        <version>15</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoGestor&quot; + hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;)) == &quot;Nao&quot;</condition>
      <destinationSequenceId>12</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>2</expressionOrder>
        <version>15</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoGestor&quot; + hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;)) == &quot;Sim&quot; &amp;&amp; hAPI.getCardValue(&quot;proximoAprovador&quot;) == &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;tblFilho&quot;) == &quot;tblRECIBO&quot;</condition>
      <destinationSequenceId>11</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>3</expressionOrder>
        <version>15</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoGestor&quot; + hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;)) == &quot;Sim&quot; &amp;&amp; hAPI.getCardValue(&quot;proximoAprovador&quot;) == &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;tblFilho&quot;) != &quot;tblRECIBO&quot;</condition>
      <destinationSequenceId>13</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>4</expressionOrder>
        <version>15</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoGestor&quot; + hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;)) == &quot;Sim&quot; &amp;&amp; hAPI.getCardValue(&quot;proximoAprovador&quot;) != &quot;&quot;</condition>
      <destinationSequenceId>9</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>1</expressionOrder>
        <version>15</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoValidacaoFiscal&quot;) == &quot;Nao&quot;</condition>
      <destinationSequenceId>12</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>2</expressionOrder>
        <version>15</version>
        <sequence>27</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoValidacaoFiscal&quot;) == &quot;Sim&quot;</condition>
      <destinationSequenceId>13</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>1</expressionOrder>
        <version>15</version>
        <sequence>37</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&apos;aceite&apos;) == &apos;S&apos;</condition>
      <destinationSequenceId>40</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>2</expressionOrder>
        <version>15</version>
        <sequence>37</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&apos;aceite&apos;) == &apos;N&apos;</condition>
      <destinationSequenceId>16</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>1</expressionOrder>
        <version>15</version>
        <sequence>46</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == null ||&#xd;
hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == undefined ||&#xd;
hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == &quot;&quot;</condition>
      <destinationSequenceId>9</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>2</expressionOrder>
        <version>15</version>
        <sequence>46</sequence>
      </conditionProcessStatePK>
      <condition>true</condition>
      <destinationSequenceId>13</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>1</expressionOrder>
        <version>15</version>
        <sequence>55</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoAprovacaoFinanc&quot;) == &quot;Sim&quot; </condition>
      <destinationSequenceId>15</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>2</expressionOrder>
        <version>15</version>
        <sequence>55</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoAprovacaoFinanc&quot;) == &quot;Nao&quot; &amp;&amp; &#xd;
(hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == null ||&#xd;
hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == undefined ||&#xd;
hAPI.getCardValue(&quot;numSolLancNfPgtoGuiaTxBoletos&quot;) == &quot;&quot;)</condition>
      <destinationSequenceId>11</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <expressionOrder>3</expressionOrder>
        <version>15</version>
        <sequence>55</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;decisaoAprovacaoFinanc&quot;) == &quot;Nao&quot;</condition>
      <destinationSequenceId>12</destinationSequenceId>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>19</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>18</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>20</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>28</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>11</initialStateSequence>
      <finalStateSequence>27</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>36</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>16</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>38</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>15</initialStateSequence>
      <finalStateSequence>37</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>39</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>37</initialStateSequence>
      <finalStateSequence>16</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>41</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>37</initialStateSequence>
      <finalStateSequence>40</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>47</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>43</initialStateSequence>
      <finalStateSequence>46</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>48</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>46</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>56</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>13</initialStateSequence>
      <finalStateSequence>55</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>57</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>55</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Aprovado</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>59</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>12</initialStateSequence>
      <finalStateSequence>43</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>60</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>11</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>61</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>55</initialStateSequence>
      <finalStateSequence>11</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>62</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>27</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Não</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>63</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>46</initialStateSequence>
      <finalStateSequence>13</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>64</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>27</initialStateSequence>
      <finalStateSequence>13</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sim</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>65</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>55</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>66</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>13</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>67</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Proxima Alcada</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>69</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>8</initialStateSequence>
      <finalStateSequence>68</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>73</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>71</initialStateSequence>
      <finalStateSequence>72</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>74</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>72</initialStateSequence>
      <finalStateSequence>68</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <linkSequence>75</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>68</initialStateSequence>
      <finalStateSequence>43</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>populaCamposHiddenAnalytics</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function populaCamposHiddenAnalytics(sequenceId){&#xd;
	var CURRENT_STATE = getValue(&quot;WKNumState&quot;);&#xd;
	var expediente = &quot;Default&quot;;&#xd;
	var tipoSolicitacao = hAPI.getCardValue(&quot;analyticsTpSolicitacao&quot;);&#xd;
	&#xd;
	log.info(&quot;=================populaCamposHiddenAnalytics INICIO&quot;);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics CURRENT_STATE &quot;+CURRENT_STATE);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics sequenceId &quot;+sequenceId);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics tipoSolicitacao &quot;+tipoSolicitacao);&#xd;
	&#xd;
	if( //sequenceId == SEPARACAO ||&#xd;
		//sequenceId == AVALIACAO ||&#xd;
		sequenceId == AVALIAR ||&#xd;
		sequenceId == SOLUCAO_INC ||&#xd;
		sequenceId == ATUALIZA_SLA_1 ||&#xd;
		sequenceId == ATUALIZA_SLA_2){&#xd;
		populaAnalytics(sequenceId, CURRENT_STATE);&#xd;
	}else if(sequenceId == FIM){&#xd;
		populaAnalytics(sequenceId, CURRENT_STATE);&#xd;
		finalizarSolicitacao();&#xd;
	}&#xd;
	&#xd;
	log.info(&quot;=================populaCamposHiddenAnalytics FIM&quot;);&#xd;
}&#xd;
&#xd;
function finalizarSolicitacao(){&#xd;
	&#xd;
		var dataAtual = new Date();&#xd;
		var dataFormatada = formatarDataAnalytics(dataAtual.getDate(), (dataAtual.getMonth()+1), dataAtual.getFullYear(), dataAtual.getHours(), dataAtual.getMinutes(), dataAtual.getSeconds());&#xd;
		&#xd;
		hAPI.setCardValue(&quot;analyticsDtFim&quot;,dataFormatada.split(&quot; &quot;)[0]);&#xd;
		hAPI.setCardValue(&quot;analyticsHrFim&quot;,dataFormatada.split(&quot; &quot;)[1]);&#xd;
		&#xd;
}&#xd;
&#xd;
function populaAnalytics(sequenceId, CURRENT_STATE){&#xd;
	&#xd;
	if (CURRENT_STATE != INICIO) {&#xd;
&#xd;
		var expediente = &quot;Default&quot;;&#xd;
		var tipoSolicitacao = hAPI.getCardValue(&quot;analyticsTpSolicitacao&quot;);&#xd;
		/*if(tipoSolicitacao == &quot;&quot;){&#xd;
			tipoSolicitacao = &quot;Solicitação de Pagamentos/Repasse Médico/RPA&quot;;&#xd;
			hAPI.setCardValue(&quot;analyticsTpSolicitacao&quot;,tipoSolicitacao);&#xd;
		}*/&#xd;
		&#xd;
		var prazoSLA = hAPI.getCardValue(&quot;analyticsPrazoSLA&quot;);&#xd;
		var codigoSLA;// = &quot;lancamentoNfPagamento&quot;;//&quot;solicitacaoPreNota&quot;;&#xd;
				&#xd;
		hAPI.setCardValue(&quot;analyticsTpSolicitacao&quot;,&quot;Solicitação Guia Taxas e Boletos&quot;);&#xd;
		codigoSLA = &quot;solicitacaoGuiaTaxasBoleto&quot;;&#xd;
				&#xd;
		log.info(&quot;===================populaCamposHiddenAnalytics populaAdiantamento &quot;);&#xd;
		var dataFormatada = buscaDataFormatada(&quot;analyticsDtInicio&quot;,&quot;analyticsHrInicio&quot;);&#xd;
		log.info(&quot;=====populaCamposHiddenAnalytics populaAdiantamento dataFormatada &quot;+dataFormatada);&#xd;
		&#xd;
		var sla;&#xd;
		&#xd;
		if(prazoSLA == &quot;&quot;){&#xd;
			log.info(&quot;=====populaCamposHiddenAnalytics populaAdiantamento prazoSLAVazio &quot;+prazoSLA);&#xd;
			var prazosSLA = buscaDatasetPrazosSLA();&#xd;
			sla = buscaSLA(codigoSLA, prazosSLA);&#xd;
			hAPI.setCardValue(&quot;analyticsPrazoSLA&quot;,sla.prazo_sla);&#xd;
			hAPI.setCardValue(&quot;analyticsMedidaPrazoSLA&quot;,sla.medida_prazo);&#xd;
		}else{&#xd;
			log.info(&quot;=====populaCamposHiddenAnalytics populaAdiantamento prazoSLAPreenchido &quot;+prazoSLA);&#xd;
			sla = {&#xd;
					codigo_sla : codigoSLA,&#xd;
					prazo_sla : prazoSLA,&#xd;
					medida_prazo : hAPI.getCardValue(&quot;analyticsMedidaPrazoSLA&quot;)&#xd;
			};&#xd;
		}&#xd;
		&#xd;
		hAPI.setCardValue(&quot;analyticsDtInicio&quot;,dataFormatada.split(&quot; &quot;)[0]);&#xd;
		hAPI.setCardValue(&quot;analyticsHrInicio&quot;,dataFormatada.split(&quot; &quot;)[1]);&#xd;
		&#xd;
		log.info(&quot;=====populaCamposHiddenAnalytics populaAdiantamento sla &quot;+sla);&#xd;
		&#xd;
		if (sequenceId == AVALIAR || sequenceId == ATUALIZA_SLA_1 || sequenceId == ATUALIZA_SLA_2 || sequenceId == SOLUCAO_INC || sequenceId == FIM) {&#xd;
			&#xd;
			var atividadesDescartadas = new Array();&#xd;
			atividadesDescartadas[0] = CORRECAO;&#xd;
			atividadesDescartadas[1] = APROV_SOLIC;&#xd;
		&#xd;
			var primeirasAtividadesDescartadas = new Array();&#xd;
			&#xd;
			var prazoConclusao = buscaPrazoConclusao(sla, atividadesDescartadas, primeirasAtividadesDescartadas, dataFormatada.split(&quot; &quot;)[0], dataFormatada.split(&quot; &quot;)[1]);&#xd;
			log.info(&quot;=====populaCamposHiddenAnalytics populaAdiantamento prazoConclusao &quot;+prazoConclusao);&#xd;
			hAPI.setCardValue(&quot;analyticsDtPrazo&quot;,prazoConclusao.split(&quot; &quot;)[0]);&#xd;
			hAPI.setCardValue(&quot;analyticsHrPrazo&quot;,prazoConclusao.split(&quot; &quot;)[1]);	&#xd;
			&#xd;
		}&#xd;
	}&#xd;
}&#xd;
&#xd;
function buscaPrazoConclusao(sla, atividadesDescartadas, primeirasAtividadesDescartadas, dataInicio, horaInicio){&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao sla |&quot;+sla+&quot;|&quot;);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao atividadesDescartadas |&quot;+atividadesDescartadas+&quot;|&quot;);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao dataInicio |&quot;+dataInicio+&quot;|&quot;);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao horaInicio |&quot;+horaInicio+&quot;|&quot;);&#xd;
	var expediente = &quot;Default&quot;;&#xd;
	&#xd;
	var dataPrazoConclusao = calculaPrazoConclusao(sla, expediente, atividadesDescartadas, primeirasAtividadesDescartadas, dataInicio, horaInicio);&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao dataPrazoConclusao &quot;+dataPrazoConclusao.getDate()+&quot;/&quot;+(dataPrazoConclusao.getMonth() + 1)+&quot;/&quot;+dataPrazoConclusao.getFullYear()+&quot; &quot;+dataPrazoConclusao.getHours()+&quot;:&quot;+dataPrazoConclusao.getMinutes()+&quot;:&quot;+dataPrazoConclusao.getSeconds());&#xd;
	var dataFormatadaPrazo = formatarDataAnalytics(dataPrazoConclusao.getDate()+&quot;&quot;, (dataPrazoConclusao.getMonth() + 1)+&quot;&quot;, dataPrazoConclusao.getFullYear()+&quot;&quot;, dataPrazoConclusao.getHours()+&quot;&quot;,dataPrazoConclusao.getMinutes()+&quot;&quot;,dataPrazoConclusao.getSeconds()+&quot;&quot;)&#xd;
	log.info(&quot;=====populaCamposHiddenAnalytics buscaPrazoConclusao dataFormatadaPrazo &quot;+dataFormatadaPrazo);&#xd;
	&#xd;
	return dataFormatadaPrazo;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask68</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask68(attempt, message) {
	
	if(hAPI.getCardValue(&quot;viaWebService&quot;) == true){
	var filial = hAPI.getCardValue(&quot;codigo&quot;);
	var centroCusto = hAPI.getCardValue(&quot;CTT_DESC01&quot;);
	var valor = hAPI.getCardValue(&quot;valorPgtoGuiaTaxaBoletos&quot;);
	if(filial == &quot;&quot; || centroCusto == &quot;&quot; || valor == &quot;&quot;){
		throw &quot;Os campos não podem estar vazios&quot;
	}
	else{	
	    var c1 = DatasetFactory.createConstraint(&quot;filial&quot;, filial, filial, ConstraintType.MUST);
	    var c2 = DatasetFactory.createConstraint(&quot;centroCusto&quot;, centroCusto, centroCusto, ConstraintType.MUST);
	    var c3 = DatasetFactory.createConstraint(&quot;valor&quot;, valor, valor, ConstraintType.MUST);
	    var constraints = new Array(c1, c2, c3);
	    var ds_aprov = DatasetFactory.getDataset(&quot;ds_alcadaAprovacaoPagamentos&quot;, null, constraints, null);
	    var gestores = [];
	    for (var x = 0; x &lt; ds_aprov.values.length; x++) {
	        var aprovador = {
	            id: ds_aprov.values[x].IDAPROVADOR,
	            nome: ds_aprov.values[x].APROVADOR
	        }
	        gestores.push(aprovador)
	    }
	    
	    hAPI.setCardValue(&apos;idAprovGestor1&apos;, gestores[0].id);
	    
	    hAPI.setCardValue(&apos;nomeAprovGestor1&apos;, gestores[0].nome);
		}
	}
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeCancelProcess</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeCancelProcess(colleagueId,processId){&#xd;
	// Faz a remoção do Título no protheus&#xd;
	var numeroTitulo = hAPI.getCardValue(&apos;numeroDocumento&apos;);&#xd;
	if(numeroTitulo != &apos;&apos; &amp;&amp; numeroTitulo != undefined){&#xd;
		var msgWS = removeTiTuloProtheus();&#xd;
		var retornoWS = verificaErro(msgWS);&#xd;
		if (retornoWS != &quot;Sucesso&quot;) {&#xd;
			throw &quot;Não foi possível remover o Título no Protheus. &quot;+msgWS;&#xd;
		}&#xd;
	}&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_objWS_1-0-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var objWS =&#xd;
/**&#xd;
 * Classe responsável pela manipulação do Web Service junto ao Protheus&#xd;
 * &#xd;
 * @param stringServiceInstance&#xd;
 *            Exemplo:&#xd;
 * @param stringMetodoWebService&#xd;
 *            Exemplo:&#xd;
 */&#xd;
function(stringServiceInstance, stringMetodoWebService, rateado) {&#xd;
	var serviceInstance = &apos;&apos;;&#xd;
	var metodoWebService = &apos;&apos;;&#xd;
	var serviceProvider = &apos;&apos;;&#xd;
	var serviceLocator = &apos;&apos;;&#xd;
	var service = &apos;&apos;;&#xd;
	var instantiate = &apos;&apos;;&#xd;
	var lista = [];&#xd;
	var listaIndice = [];&#xd;
	var listaStringIni = &apos;&apos;;&#xd;
	var listaString = &apos;&apos;;&#xd;
	var listaStringCabec = &apos;&apos;;&#xd;
	var listaXMLItensFinal = &apos;&apos;;&#xd;
	var listaFinal = &apos;&apos;;&#xd;
	var tipoWS = &apos;&apos;;&#xd;
	var tipoWSFim = &apos;&apos;;&#xd;
	var operacaoWS = &apos;&apos;;&#xd;
	var usaExcluiPreNota = false;&#xd;
&#xd;
	var setServiceInstance = function(stringServiceInstance) {&#xd;
		serviceInstance = stringServiceInstance;&#xd;
	};&#xd;
	var setInstantiate = function() {&#xd;
		instantiate = &quot;br.com.oncoclinicas.FSWSP001Locator&quot;;&#xd;
	};&#xd;
	var setMetodoWebService = function(stringMetodoWebService) {&#xd;
		metodoWebService = stringMetodoWebService;&#xd;
	};&#xd;
	var getItemLista = function(stringNomeCampo) {&#xd;
		for ( var column in listaIndice) {&#xd;
			if (listaIndice[column] == stringNomeCampo) {&#xd;
				return true;&#xd;
			}&#xd;
		}&#xd;
&#xd;
		return false;&#xd;
	};&#xd;
	/**&#xd;
	 * Adicionar campos na lista do Web Service. O valor será atribuido&#xd;
	 * automaticamente.&#xd;
	 * &#xd;
	 * @param stringNomeCampo&#xd;
	 *            Inserir o name do campo&#xd;
	 * @param valorCampoEstatico&#xd;
	 *            Opcional, inserir o valor do campo em caso de campo estático&#xd;
	 */&#xd;
	this.setListaCabec = function(stringNomeCampo, valorCampoEstatico) {&#xd;
		if (!getItemLista(stringNomeCampo)) {&#xd;
&#xd;
			if (valorCampoEstatico == null) {&#xd;
				lista.push(setObjValorCampo(stringNomeCampo));&#xd;
				listaIndice.push(stringNomeCampo);&#xd;
			} else if (valorCampoEstatico != &apos;&apos;) {&#xd;
				lista.push(valorCampoEstatico);&#xd;
				listaIndice.push(stringNomeCampo);&#xd;
			} else {&#xd;
				debug(&quot;&lt;br&gt;&lt;br&gt;- &quot; + stringNomeCampo&#xd;
						+ &quot; declarado com valor vazio em objWS.setLista.&quot;);&#xd;
			}&#xd;
		} else {&#xd;
			debug(&quot;&lt;br&gt;&lt;br&gt;- &quot; + stringNomeCampo&#xd;
					+ &quot; declarado repetidamente em objWS.setLista.&quot;);&#xd;
		}&#xd;
	};&#xd;
	var setObjValorCampo = function(stringNomeCampo) {&#xd;
		var valorCampo = buscarValorCampo(stringNomeCampo);&#xd;
&#xd;
		if (!valorCampo) {&#xd;
			debug(&quot;&lt;br&gt;&lt;br&gt;- &quot; + stringNomeCampo&#xd;
					+ &quot; não encontrado em objWS.setObjValorCampo.&quot;);&#xd;
		}&#xd;
&#xd;
		return valorCampo;&#xd;
	};&#xd;
	var processarListaCabec = function() {&#xd;
		listaString = &apos;&apos;;&#xd;
		&#xd;
&#xd;
		if (lista.length == 0) {&#xd;
			debug(&quot;&lt;br&gt;&lt;br&gt;- Erro ao processar Lista está vazia! Preencha algum campo.&quot;);&#xd;
		}&#xd;
&#xd;
		for ( var item in lista) {&#xd;
			&#xd;
			var string = lista[item]+&quot;&quot;;&#xd;
&#xd;
			if(string.indexOf(&quot;/&quot;) &gt; -1){&#xd;
				var arrayDataXML = string.split(&quot;/&quot;);&#xd;
				var data = &apos;&apos;;&#xd;
				if(arrayDataXML.length == 3){&#xd;
				    &#xd;
					var ano = arrayDataXML[2];&#xd;
					var mes = arrayDataXML[1];&#xd;
					var dia = arrayDataXML[0];&#xd;
					&#xd;
					data = ano + &apos;&apos; + mes + &apos;&apos; + dia;	&#xd;
					&#xd;
					listaString += &apos;&lt;&apos;+ listaIndice[item] + &apos;&gt;&apos; + data + &apos;&lt;/&apos; + listaIndice[item] + &apos;&gt;&apos;;&#xd;
				}&#xd;
			}else{&#xd;
				listaString += &apos;&lt;&apos;+ listaIndice[item] + &apos;&gt;&apos; + string + &apos;&lt;/&apos; + listaIndice[item] + &apos;&gt;&apos;;&#xd;
			}&#xd;
			&#xd;
			&#xd;
		}&#xd;
	};&#xd;
	&#xd;
	var processarListaIniFimCabec = function() {&#xd;
		//Verifica se o valor está sendo rateado para gerar a tag XML adequada.&#xd;
		if(rateado == true){&#xd;
			var listaStringCabecIni =  &apos;&lt;Banco&gt;&apos;;&#xd;
			var listaStringCabecFim =  &apos;&lt;/Banco&gt;&apos;;			&#xd;
		} else {&#xd;
			var listaStringCabecIni =  &apos;&lt;Cadastro&gt;&apos;;&#xd;
			var listaStringCabecFim =  &apos;&lt;/Cadastro&gt;&apos;;&#xd;
		}&#xd;
		listaStringCabec = listaStringCabecIni + listaString + listaStringCabecFim;&#xd;
	};&#xd;
	&#xd;
	this.setListaTipo = function(tipo) {&#xd;
		tipoWS = &apos;&apos;;&#xd;
		tipoWSFim = &apos;&apos;;&#xd;
		tipoWS += &apos;&lt;&apos; + tipo + &apos;&gt;&apos;;&#xd;
		tipoWSFim += &apos;&lt;/&apos; + tipo + &apos;&gt;&apos;;&#xd;
	};&#xd;
	this.setListaOperacao = function(operacao){&#xd;
		operacaoWS = &apos;&apos;;&#xd;
		operacaoWS += &apos;&lt;Operacao&gt;&lt;Id&gt;&apos; + operacao + &apos;&lt;/Id&gt;&lt;/Operacao&gt;&apos;;&#xd;
	};&#xd;
	&#xd;
	this.setExclui = function(exclui){&#xd;
		usaExcluiPreNota = false;&#xd;
		usaExcluiPreNota = exclui;&#xd;
	};&#xd;
		&#xd;
	this.setListaItens = function(arrayCamposNatureza,arrayCamposItens) {&#xd;
		var listaXMLItensIni = &apos;&lt;Naturezas&gt;&apos;;&#xd;
		var ListaXMLItensFim = &apos;&lt;/Naturezas&gt;&apos;;&#xd;
		var listaXMLIten = &apos;&apos;;&#xd;
		var listaTodosXMLIten = &apos;&apos;;&#xd;
		var listaXMLItensTag = &apos;&apos;;&#xd;
		if (arrayCamposItens == undefined || arrayCamposItens.length == 0) {&#xd;
			debug(&quot;&lt;br&gt;&lt;br&gt;- Erro ao processar Lista está vazia! Preencha algum campo de item.&quot;);&#xd;
		}&#xd;
			listaXMLItensTag = &apos;&apos;;&#xd;
			listaXMLIten = &apos;&lt;Natureza&gt;&apos;;&#xd;
			&#xd;
			for (var i=arrayCamposNatureza.length - 1 ; i &gt;= 0;i--){&#xd;
				var tag = arrayCamposNatureza[i].tag;&#xd;
				var valorTag = arrayCamposNatureza[i].valorTag;&#xd;
				listaXMLIten += &apos;&lt;&apos; + tag + &apos;&gt;&apos; + valorTag + &apos;&lt;/&apos; + tag + &apos;&gt;&apos;;&#xd;
			}&#xd;
			&#xd;
			listaXMLIten += &apos;&lt;EV_RATEICC&gt;1&lt;/EV_RATEICC&gt;&apos;; //Informa ao Protheus a existência de rateio por centro de custo&#xd;
			listaXMLIten += &apos;&lt;CentrosCustos&gt;&apos;;&#xd;
			for (var i=arrayCamposItens.length - 1 ; i &gt;= 0;i--){&#xd;
				listaXMLIten += &apos;&lt;CentroCusto&gt;&apos;;&#xd;
				listaXMLItensTag = &apos;&apos;;&#xd;
				for(var propriedade in arrayCamposItens[i]) {&#xd;
					var string = arrayCamposItens[i][propriedade].name;&#xd;
					var n = string.lastIndexOf(&apos;___&apos;);&#xd;
					var tag = string.substring(0, n);&#xd;
					var valorTag = arrayCamposItens[i][propriedade].value;&#xd;
				&#xd;
					listaXMLItensTag += &apos;&lt;&apos; + tag + &apos;&gt;&apos; + valorTag + &apos;&lt;/&apos; + tag + &apos;&gt;&apos;;&#xd;
				}&#xd;
				listaXMLIten += listaXMLItensTag;&#xd;
				listaXMLIten += &apos;&lt;/CentroCusto&gt;&apos;;&#xd;
			}&#xd;
			listaXMLIten += &apos;&lt;/CentrosCustos&gt;&apos;;&#xd;
			listaXMLIten += &apos;&lt;/Natureza&gt;&apos;;&#xd;
		&#xd;
			listaTodosXMLIten += listaXMLIten;&#xd;
			&#xd;
		&#xd;
		listaXMLItensFinal += listaXMLItensIni + listaTodosXMLIten + ListaXMLItensFim;&#xd;
		&#xd;
		&#xd;
&#xd;
	}; &#xd;
	&#xd;
	var processarInic = function(){&#xd;
		var listaInic = &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&apos;;&#xd;
		listaStringIni += listaInic + tipoWS + operacaoWS;&#xd;
	&#xd;
	};&#xd;
	&#xd;
	var processarFim = function(){&#xd;
		var listaFim = &apos;&apos;;&#xd;
		listaFim += tipoWSFim;&#xd;
	&#xd;
		listaFinal += listaStringIni + listaStringCabec + listaXMLItensFinal + listaFim;&#xd;
	};&#xd;
	var criarService = function() {&#xd;
		serviceProvider = ServiceManager.getServiceInstance(serviceInstance);&#xd;
	};&#xd;
	var instanciarLocator = function() {&#xd;
		serviceLocator = serviceProvider.instantiate(instantiate);&#xd;
	};&#xd;
	var instanciarPort = function() {&#xd;
		service = serviceLocator.getFSWSP001SOAP();&#xd;
	};&#xd;
	var executarWebService = function() {&#xd;
		if (service == undefined) {&#xd;
			debug(&quot;Ocorreu um erro ao executarWebService.&quot;);&#xd;
		}&#xd;
		&#xd;
		try{&#xd;
			&#xd;
			var webService = service.WSINTIPG(listaFinal);&#xd;
			var mensagem = webService.getMENSAGEM();&#xd;
			var retorno = webService.getRETORNO();&#xd;
			var retMensagem = retorno + &quot;|&quot; + mensagem;&#xd;
&#xd;
			if(operacaoWS == &quot;3&quot; &amp;&amp; usaExcluiPreNota == true){&#xd;
				if (retorno != &quot;1&quot; &amp;&amp; retorno != &quot;2&quot; &amp;&amp; retorno != &quot;3&quot;) {&#xd;
					debug(&quot;Ocorreu um erro ao cadastrar no Protheus: &quot; + mensagem);&#xd;
				}&#xd;
			}else if(operacaoWS == &quot;3&quot; &amp;&amp; usaExcluiPreNota == false){&#xd;
				if (retorno != &quot;1&quot; &amp;&amp; retorno != &quot;2&quot;) {&#xd;
					debug(&quot;Ocorreu um erro ao cadastrar no Protheus: &quot; + mensagem);&#xd;
				}&#xd;
			}else if(operacaoWS == &quot;1&quot; &amp;&amp; usaExcluiPreNota == false){&#xd;
				if (retorno != &quot;1&quot; &amp;&amp; retorno != &quot;2&quot;) {&#xd;
					debug(&quot;Ocorreu um erro ao cadastrar no Protheus: &quot; + mensagem);&#xd;
				}			&#xd;
			}&#xd;
			return retMensagem;&#xd;
			&#xd;
		}catch(e){&#xd;
			log.error(&apos;Erro ao executar webservice: &apos;+e);&#xd;
		}&#xd;
	};&#xd;
	/**&#xd;
	 * Executar a funcionalidade do Web Service.&#xd;
	 */&#xd;
	this.executar = function() {&#xd;
		processarInic();&#xd;
		processarListaCabec();&#xd;
		processarListaIniFimCabec();&#xd;
		processarFim();&#xd;
		criarService();&#xd;
		instanciarLocator();&#xd;
		instanciarPort();&#xd;
		log.info(&quot;XML: &quot;+listaFinal);&#xd;
		return executarWebService();&#xd;
		 &#xd;
	};&#xd;
	var __construct = function(stringServiceInstance, stringMetodoWebService) {&#xd;
		setServiceInstance(stringServiceInstance);&#xd;
		setInstantiate();&#xd;
		setMetodoWebService(stringMetodoWebService);&#xd;
	}(stringServiceInstance, stringMetodoWebService);&#xd;
};&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeTaskSave</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var gestorResponsavelId = &quot;&quot;;&#xd;
&#xd;
function beforeTaskSave(colleagueId, nextSequenceId, userList) {&#xd;
	var atividadeAtual = getValue(&quot;WKNumState&quot;);&#xd;
	var ATIVIDADE = getValue(&quot;WKNumState&quot;);&#xd;
	&#xd;
	/*&#xd;
	if (nextSequenceId == ATRIBUIR_RESPONSAVEL) {&#xd;
		definirGestorResponsavel();&#xd;
	}&#xd;
	*/&#xd;
&#xd;
&#xd;
	&#xd;
	&#xd;
	&#xd;
	if (ATIVIDADE == CORRIGIR) {&#xd;
&#xd;
		hAPI.setCardValue(&quot;nomeAprovGestor1&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;dataAprovGestor1&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;decisaoGestor1&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;motivoAprovGestor1&quot;,&quot;&quot;);&#xd;
&#xd;
		hAPI.setCardValue(&quot;nomeAprovGestor2&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;dataAprovGestor2&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;decisaoGestor2&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;motivoAprovGestor2&quot;,&quot;&quot;);&#xd;
		&#xd;
		hAPI.setCardValue(&quot;nomeAprovGestor3&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;dataAprovGestor3&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;decisaoGestor3&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;motivoAprovGestor3&quot;,&quot;&quot;);&#xd;
		&#xd;
		hAPI.setCardValue(&quot;nomeAprovGestor4&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;dataAprovGestor4&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;decisaoGestor4&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;motivoAprovGestor4&quot;,&quot;&quot;);&#xd;
		&#xd;
		hAPI.setCardValue(&quot;nomeAprovGestor5&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;dataAprovGestor5&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;decisaoGestor5&quot;,&quot;&quot;);&#xd;
		hAPI.setCardValue(&quot;motivoAprovGestor5&quot;,&quot;&quot;);&#xd;
		&#xd;
	}&#xd;
	&#xd;
	if (ATIVIDADE == GESTOR){&#xd;
		hAPI.setCardValue(&quot;nivelAtualAprovacao&quot;, parseInt(hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;)) + 1);&#xd;
	}&#xd;
		&#xd;
	if (atividadeAtual == PROGRAMAR &amp;&amp; getValue(&quot;WKCompletTask&quot;)==&quot;true&quot;){&#xd;
		//Caso aprovado pelo fiscal e não seja &quot;apenas boleto&quot; o título será gerado&#xd;
		log.info(&apos;HEITOR SALDANHA CAMPO SOLICITACAO: &apos;+hAPI.getCardValue(&apos;numSolLancNfPgtoGuiaTxBoletos&apos;))&#xd;
		if(hAPI.getCardValue(&apos;decisaoAprovacaoFinanc&apos;) == &apos;Sim&apos; &amp;&amp; hAPI.getCardValue(&apos;numSolLancNfPgtoGuiaTxBoletos&apos;) == &apos;&apos;){&#xd;
			log.info(&apos;HEITOR SALDANHA INTEGROU PAGAMENTO&apos;);&#xd;
			//verifica se deve-se gerar o título do protheus baseado nas retenções&#xd;
			if(verificaRetencao()){&#xd;
				// Faz a inserção de Título no Protheus&#xd;
				var msgWS = insereTituloProtheus();&#xd;
				var retornoWS = verificaErro(msgWS);&#xd;
				if (retornoWS != &quot;Sucesso&quot;) {&#xd;
					throw &quot;Não foi possível inserir o Título no Protheus. &quot;;&#xd;
				} else {&#xd;
					var numeroTitulo = msgWS.split(&quot;|&quot;); &#xd;
					var users = new java.util.ArrayList();&#xd;
					hAPI.setCardValue(&quot;numeroDocumento&quot;, numeroTitulo[1]);&#xd;
				}&#xd;
			}			&#xd;
		}		&#xd;
	}&#xd;
	&#xd;
	//Apaga o titulo quando ele for enviado para correção &#xd;
	if(atividadeAtual == EXCLUSIVO_VALIDAR_PROGRAMAR &amp;&amp; getValue(&quot;WKCompletTask&quot;)==&quot;true&quot;){&#xd;
		if(nextSequenceId == CORRECAO || nextSequenceId == VALIDACAO){&#xd;
			var numeroTitulo = hAPI.getCardValue(&apos;numeroDocumento&apos;);&#xd;
			if(numeroTitulo != &apos;&apos; &amp;&amp; numeroTitulo != undefined){&#xd;
				var msgWS = removeTiTuloProtheus();&#xd;
				var retornoWS = verificaErro(msgWS);&#xd;
				if (retornoWS != &quot;Sucesso&quot;) {&#xd;
					throw &quot;Não foi possível remover o Título no Protheus. &quot;;&#xd;
				} else {&#xd;
					var numeroTitulo = msgWS.split(&quot;|&quot;); &#xd;
					var users = new java.util.ArrayList();&#xd;
					hAPI.setCardValue(&quot;numeroDocumento&quot;, &apos;&apos;);&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
}&#xd;
&#xd;
function definirGestorResponsavel() {&#xd;
	buscarGestorResponsavel();&#xd;
	setWFParametro(&quot;gestorResponsavel&quot;, gestorResponsavelId);&#xd;
}&#xd;
&#xd;
function buscarGestorResponsavel() {&#xd;
	var dataSet = new objDataSet(&quot;dataSetResponsavelAprovacaoGeral&quot;);&#xd;
&#xd;
	// Parametro para consulta do responsavel do Centro de Custo&#xd;
	var codFilial = getCodFilial();&#xd;
	var codCentroCusto = getCodCentroCusto();&#xd;
	var numAlcada = 1;&#xd;
	var valorPedido = 0;&#xd;
&#xd;
	// realizacao do filtro&#xd;
	dataSet.setFiltro(&quot;codFilial&quot;, codFilial);&#xd;
	dataSet.setFiltro(&quot;codCentroCusto&quot;, codCentroCusto);&#xd;
	dataSet.setFiltro(&quot;numAlcada&quot;, numAlcada);&#xd;
	dataSet.setFiltro(&quot;valorPedido&quot;, valorPedido);&#xd;
&#xd;
	dataSet.buscar();&#xd;
&#xd;
	// Retorno com todos os dados&#xd;
	var dados = dataSet.getDados();&#xd;
&#xd;
	if (dados.getValue(0, &quot;status&quot;) != false) {&#xd;
		gestorResponsavelId = dados.getValue(0, &quot;matricula&quot;);&#xd;
&#xd;
		return true;&#xd;
	} else {&#xd;
		return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
function getCodFilial(){&#xd;
	return getWFParametro(&quot;codigo_filial&quot;);&#xd;
}&#xd;
&#xd;
function getCodCentroCusto() {&#xd;
	return getWFParametro(&quot;CTT_CUSTO&quot;);;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_process_1-0-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/*&#xd;
 * Retorna o Valor do Campo&#xd;
 */&#xd;
function buscarValorCampo(nomeCampo) {&#xd;
	return hAPI.getCardValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/*&#xd;
 * M?todo para retornar os Dados do dataSet selecionado&#xd;
 */&#xd;
function getValorDataSet(nomeDataSet, campoIdDataSet, valorIdDataSet, nomeCampo) {&#xd;
	var dataSet = DatasetFactory.getDataset(nomeDataSet, null, null, null);&#xd;
	var valorCampo = false;&#xd;
&#xd;
	for ( var i = 0; i &lt; dataSet.rowsCount; i++) {&#xd;
		if (dataSet.getValue(i, codigoDataSet) == valorIdDataSet) {&#xd;
			valorCampo = dataSet.getValue(i, nomeCampo);&#xd;
		}&#xd;
	}&#xd;
	return valorCampo;&#xd;
}&#xd;
&#xd;
/*&#xd;
 * Debug&#xd;
 */&#xd;
function debug(string){&#xd;
	log.info(string);	&#xd;
	throw string;&#xd;
}&#xd;
&#xd;
function gravarLog(string){&#xd;
	log.info(string);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_fluig_1-3-2</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/*&#xd;
 * Arquivo respons�vel por fun��es de manipula��o comum entre Events e Scripts do Workflow. &#xd;
 */&#xd;
&#xd;
/**&#xd;
 * M�todo para retornar os parametros defaults do Fluig&#xd;
 * &#xd;
 * @param servico&#xd;
 *            Nome do servi�o do Fluig&#xd;
 * &#xd;
 * @returns Valor do servi�o&#xd;
 */&#xd;
function getParametro(servico) {&#xd;
	return getValue(servico);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * M�todo para gravar o valor no name informado&#xd;
 * &#xd;
 * @param form&#xd;
 *            Informar o form do displayFields e validateForm&#xd;
 * @param nomeCampo&#xd;
 *            Informar o name do Campo&#xd;
 * @param valorCampo&#xd;
 *            Infromar o valor do Campo&#xd;
 */&#xd;
function setValorCampo(form, nomeCampo, valorCampo) {&#xd;
	form.setValue(nomeCampo, valorCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para retornar valor de campo do formulario&#xd;
 * &#xd;
 * @param form&#xd;
 * 			Informar o form do displayFields e validateForm&#xd;
 * @param nomeCampo&#xd;
 * 			Informar o name do Campo&#xd;
 * @returns&#xd;
 * 		Valor do campo solicitado&#xd;
 */&#xd;
function getValorCampo(form, nomeCampo) {&#xd;
	return form.getValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para retornar o valor de um campo de formulário em scripts de workflow&#xd;
 * &#xd;
 * @param nomeCampo&#xd;
 * 				Nome do campo que se deseja recuperar o valor&#xd;
 * &#xd;
 * @returns Valor do campo solicitado&#xd;
 */&#xd;
function getWFParametro(nomeCampo){&#xd;
	return hAPI.getCardValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Método para setar o valor de um campo de formulário em scripts de workflow&#xd;
 * &#xd;
 * @param nomeCampo&#xd;
 * 				Nome do campo que se deseja setar o valor&#xd;
 * @param valorCampo&#xd;
 * 				Valor do campo&#xd;
 * &#xd;
 * @returns Campo do formulário com o valor setado&#xd;
 */&#xd;
function setWFParametro(nomeCampo, valorCampo){&#xd;
	return hAPI.setCardValue(nomeCampo, valorCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Id do Usu�rio logado&#xd;
 */&#xd;
function buscarUsuarioLogado() {&#xd;
	return getParametro(&quot;WKUser&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Nome do Usu�rio&#xd;
 * &#xd;
 * @param user&#xd;
 *            Id do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Nome do Usu�rio&#xd;
 */&#xd;
function buscarNomeUsuario(user) {&#xd;
	var userName = &quot;&quot;;&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;colleaguePK.colleagueId&quot;, user,&#xd;
			user, ConstraintType.MUST);&#xd;
	var dataset = DatasetFactory.getDataset(&quot;colleague&quot;, null, [ c1 ], null);&#xd;
	if (dataset.rowsCount == 1) {&#xd;
		userName = dataset.getValue(0, &quot;colleagueName&quot;);&#xd;
	}&#xd;
	return userName;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Nome do Usu�rio Logado&#xd;
 * &#xd;
 * @returns Nome do Usu�rio Logado&#xd;
 */&#xd;
function buscarNomeUsuarioLogado() {&#xd;
	return buscarNomeUsuario(buscarUsuarioLogado());&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Id da Atividade Atual&#xd;
 * &#xd;
 * @returns Id da Atividade Atual&#xd;
 */&#xd;
function buscarAtividadeAtual() {&#xd;
	return getParametro(&quot;WKNumState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna: &quot;True&quot; para Transferir &quot;False&quot; para Salvar&#xd;
 * &#xd;
 * @returns Tarefa completada&#xd;
 */&#xd;
function buscarTarefaCompletada() {&#xd;
	return getParametro(&quot;WKCompletTask&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Rotina que retorna: O Id da Pr�xima Atividade (destino)&#xd;
 * &#xd;
 * @returns Id da Pr�xima Atividade&#xd;
 */&#xd;
function buscarProximaAtividade() {&#xd;
	return getParametro(&quot;WKNextState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id da Empresa&#xd;
 * &#xd;
 * @returns Id da Empresa&#xd;
 */&#xd;
function buscarEmpresa() {&#xd;
	return getParametro(&quot;WKCompany&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id da Solicita��o&#xd;
 * &#xd;
 * @returns Id da Solicita��o&#xd;
 */&#xd;
function buscarIdSolicitacao() {&#xd;
	return getParametro(&quot;WKNumProces&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Formul�rio do Processo&#xd;
 * &#xd;
 * @returns Id do Formul�rio do Processo&#xd;
 */&#xd;
function buscarForm() {&#xd;
	return getParametro(&quot;WKCardId&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o Id do Processo&#xd;
 * &#xd;
 * @returns Id do Processo&#xd;
 */&#xd;
function buscarIdProcesso() {&#xd;
	return getParametro(&quot;WKDef&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Buscar Vers�o do Processo&#xd;
 * &#xd;
 * @returns Vers�o do Processo&#xd;
 */&#xd;
function buscarVersaoProcesso() {&#xd;
	return getParametro(&quot;WKVersDef&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o C�digo da defini��o de formul�rio do processo&#xd;
 * &#xd;
 * @returns C�digo da defini��o de formul�rio do processo&#xd;
 */&#xd;
function buscarCodDefFormulario() {&#xd;
	return getParametro(&quot;WKFormId&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna Identificador da Empresa selecionada para Experi�ncias de uso TOTVS&#xd;
 * &#xd;
 * @returns Id da Empresa selecionada para Experi�ncias de uso TOTVS&#xd;
 */&#xd;
function buscarIdEmpresaTotvs() {&#xd;
	return getParametro(&quot;WKIdentityCompany&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna N�mero da atividade atual (verificar se buscarAtividadeAtual() te&#xd;
 * atende)&#xd;
 * &#xd;
 * @returns N�mero da atividade atual&#xd;
 */&#xd;
function buscarNumAtividadeAtual() {&#xd;
	return getParametro(&quot;WKCurrentState&quot;);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna C�digo do modo do form&#xd;
 * &#xd;
 * @returns C�digo do modo do form&#xd;
 */&#xd;
function buscarModoFormulario(form) {&#xd;
	return form.getFormMode();&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna dia, m�s e ano atual (verificar se buscarAtividadeAtual() te atende)&#xd;
 * &#xd;
 * @returns N�mero da Data Atual&#xd;
 */&#xd;
&#xd;
function buscarData() {&#xd;
	return new Date();&#xd;
}&#xd;
&#xd;
function buscarDiaAtual() {&#xd;
	return buscarData().getDate().toString();&#xd;
}&#xd;
&#xd;
function buscarMesAtual() {&#xd;
	return (buscarData().getMonth() + 1).toString();&#xd;
}&#xd;
&#xd;
function buscarAnoAtual() {&#xd;
	return buscarData().getFullYear().toString();&#xd;
}&#xd;
&#xd;
function buscarDataAtualSistema() {&#xd;
	return formatarData(buscarDiaAtual(), buscarMesAtual(), buscarAnoAtual());&#xd;
}&#xd;
&#xd;
function formatarData(dia, mes, ano) {&#xd;
	if (dia.length == 1)&#xd;
		dia = 0 + dia;&#xd;
	if (mes.length == 1)&#xd;
		mes = 0 + mes;&#xd;
	return dia + &quot;/&quot; + mes + &quot;/&quot; + ano;&#xd;
}&#xd;
&#xd;
function retiraEspacoTag() {&#xd;
	var retirarEspaco = hAPI.getCardValue(&quot;solicitante&quot;);&#xd;
	log.info(&quot;retirarEspaco Antes do Replace:&quot; + retirarEspaco);&#xd;
	return retirarEspaco.replace(&quot; &quot;, &quot;_&quot;);&#xd;
	log.info(&quot;Apos o replace::::&quot; + retirarEspaco);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>startPesquisaDeSatisfacao</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function startPesquisaDeSatisfacao(targetUserCode){&#xd;
	var processId = buscarIdProcesso();&#xd;
	var processIdPesquisa = &quot;PesquisaDeSatisfacao&quot;;&#xd;
	var numProcess = buscarIdSolicitacao();&#xd;
	var empresa = buscarEmpresa();&#xd;
	var atividadeDestino = 2;&#xd;
	var usuarioEnvio = targetUserCode;&#xd;
	var atividadeCompletada = true;&#xd;
	var modoGestor = false;&#xd;
	var sequenciaThread = 0;&#xd;
//	var pesquisaCardData = new java.util.HashMap();&#xd;
	&#xd;
	var processName = getProcessName(processId);&#xd;
	var obs = &quot;Solicitação iniciada automaticamente pelo processo &quot; + processName + &quot; Nº &quot; + numProcess;&#xd;
	var inicSolic = new objInicSolic(empresa, processIdPesquisa, atividadeDestino, usuarioEnvio, obs, atividadeCompletada, modoGestor, sequenciaThread);&#xd;
	&#xd;
	inicSolic.setColleagueRecipient(targetUserCode);&#xd;
	&#xd;
	var fieldFrom = null;&#xd;
	var fieldTo = null;&#xd;
	var fieldFromValue = null;&#xd;
&#xd;
	var parentFields = null;&#xd;
	var parentConstraints = [];&#xd;
	var parentOrder = null;&#xd;
&#xd;
	parentConstraints.push(DatasetFactory.createConstraint(&quot;metadata#active&quot;,&quot;true&quot;,&quot;true&quot;,ConstraintType.MUST));&#xd;
	parentConstraints.push(DatasetFactory.createConstraint(&quot;processoOrigem&quot;,processId,processId,ConstraintType.MUST));&#xd;
&#xd;
	var parentDataset = DatasetFactory.getDataset(&quot;ds_de_para_pesquisa_satisfacao&quot;,parentFields,parentConstraints,parentOrder);&#xd;
&#xd;
	if(parentDataset != null &amp;&amp; parentDataset.rowsCount &gt; 0){&#xd;
		var id = parentDataset.getValue(0, &quot;metadata#id&quot;);&#xd;
		var version = parentDataset.getValue(0, &quot;metadata#version&quot;);&#xd;
		&#xd;
		var childFields = null;&#xd;
		var childConstraints = [];&#xd;
		var childOrder = null;&#xd;
&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;metadata#id&quot;,id,id,ConstraintType.MUST));&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;metadata#version&quot;,version,version,ConstraintType.MUST));&#xd;
		childConstraints.push(DatasetFactory.createConstraint(&quot;tablename&quot;,&quot;campos&quot;,&quot;campos&quot;,ConstraintType.MUST));&#xd;
&#xd;
		var childDataset = DatasetFactory.getDataset(&quot;ds_de_para_pesquisa_satisfacao&quot;,childFields,childConstraints,childOrder);&#xd;
		&#xd;
		if(childDataset != null &amp;&amp; childDataset.rowsCount &gt; 0){&#xd;
			for(var i = 0; i &lt; childDataset.rowsCount; i++){&#xd;
				fieldFrom = childDataset.getValue(i, &quot;campoOrigem&quot;);&#xd;
				fieldTo = childDataset.getValue(i, &quot;campoDestino&quot;);&#xd;
				fieldFromValue = hAPI.getCardValue(fieldFrom);&#xd;
				if(fieldFromValue == null) fieldFromValue = &quot;&quot;;&#xd;
				inicSolic.setCardData(fieldTo, fieldFromValue);&#xd;
				//pesquisaCardData.put(fieldTo,fieldFromValue);&#xd;
			}&#xd;
		}&#xd;
	}&#xd;
&#xd;
&#xd;
	&#xd;
	inicSolic.setCardData(&quot;nrProcessoOrigem&quot;,java.lang.String.valueOf(numProcess));&#xd;
	inicSolic.setCardData(&quot;nmProcessoOrigem&quot;,processName);&#xd;
	inicSolic.setCardData(&quot;pesquisaRespondida&quot;,&quot;N&quot;);&#xd;
//	pesquisaCardData.put(&quot;nrProcessoOrigem&quot;,java.lang.String.valueOf(numProcess));&#xd;
//	pesquisaCardData.put(&quot;nmProcessoOrigem&quot;,processName);&#xd;
//	pesquisaCardData.put(&quot;pesquisaRespondida&quot;,&quot;N&quot;);&#xd;
	&#xd;
//	var listaColab = new java.util.ArrayList();&#xd;
//	listaColab.add(targetUserCode);&#xd;
//	&#xd;
//	var obs = &quot;Solicitação iniciada automaticamente pelo processo &quot; + processName + &quot; Nº &quot; + numProcess;&#xd;
//	&#xd;
//	hAPI.startProcess(&quot;PesquisaDeSatisfacao&quot;, 2, listaColab, obs, true, pesquisaCardData, false);&#xd;
	try{	&#xd;
		inicSolic.inicProcess();&#xd;
	} catch (e) {	&#xd;
		log.info(&quot;-------------------ERRO WEBSERVICE STARTPROCESS NOVA SOLIC ------&quot;+e.message);&#xd;
	}	&#xd;
}&#xd;
&#xd;
function getProcessName(processId){&#xd;
	var processName = &quot;&quot;;&#xd;
	var fields = null;&#xd;
	var constraints = [];&#xd;
	var order = null;&#xd;
&#xd;
	constraints.push(DatasetFactory.createConstraint(&quot;processDefinitionPK.processId&quot;,processId,processId,ConstraintType.MUST));&#xd;
&#xd;
	var dataset = DatasetFactory.getDataset(&quot;processDefinition&quot;,fields,constraints,order);&#xd;
	&#xd;
	if(dataset != null &amp;&amp; dataset.rowsCount &gt; 0){&#xd;
		processName = dataset.getValue(0,&quot;processDescription&quot;);&#xd;
	}&#xd;
	&#xd;
	return processName;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_checkAnexo_1-0-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * M?todo para verifica??o de anexos&#xd;
 * &#xd;
 * @param textoTipoAnexo&#xd;
 *            Informar o texto para completar a frase: Deve haver no m?nimo um&#xd;
 *            documento anexado ao processo!!!&lt;br&gt;* Tipo de Anexo esperado:&#xd;
 *            XXXXX;&#xd;
 * @return Boolean&#xd;
 * @author sergio.santos&#xd;
 */&#xd;
var checkAnexo = function(){&#xd;
	this.executar = function(textoTipoAnexo) {&#xd;
		var existeAnexo = false;&#xd;
		var formularioId = buscarForm();&#xd;
		var solicitacaoId = buscarIdSolicitacao();&#xd;
		var empresaId = buscarEmpresa();&#xd;
&#xd;
		log.info(&quot;formularioId =&gt; &quot; + formularioId);&#xd;
		log.info(&quot;solicitacaoId =&gt; &quot; + solicitacaoId);&#xd;
		log.info(&quot;empresaId =&gt; &quot;+ empresaId);&#xd;
		&#xd;
		var processConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.processInstanceId&quot;, solicitacaoId,&#xd;
				solicitacaoId, ConstraintType.MUST);&#xd;
		var companyConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.companyId&quot;, empresaId, empresaId,&#xd;
				ConstraintType.MUST);&#xd;
		var attachFields = new Array(&quot;documentId&quot;,&#xd;
				&quot;processAttachmentPK.attachmentSequence&quot;, &quot;version&quot;);&#xd;
		var attachConstList = new Array(processConstraint, companyConstraint);&#xd;
		var attachDataset = DatasetFactory.getDataset(&quot;processAttachment&quot;,&#xd;
				attachFields, attachConstList, new Array(&#xd;
						&quot;processAttachmentPK.attachmentSequence&quot;));&#xd;
&#xd;
		log.info(&quot;obj checkAnexo -&gt; Quantidade de anexos &quot; + attachDataset.rowsCount);&#xd;
&#xd;
		for ( var x = 0; x &lt; attachDataset.rowsCount; x++) {&#xd;
			if (attachDataset.getValue(x, &quot;documentId&quot;) != formularioId){&#xd;
				existeAnexo = true;&#xd;
			}&#xd;
		}&#xd;
&#xd;
		log.info(&quot;atualizou 11:57&quot;);&#xd;
		log.info(&quot;********** existeAnexo =&gt; &quot; + existeAnexo);&#xd;
		&#xd;
		//if (existeAnexo == false){&#xd;
		if (! existeAnexo){&#xd;
			throw &quot;Deve haver no mínimo um documento anexado ao processo!!!&lt;br&gt;&lt;br&gt;* Tipo de Anexo esperado&quot; + &quot; &quot; + textoTipoAnexo;&#xd;
		}&#xd;
		&#xd;
		//return existeAnexo;&#xd;
	};&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_inicSolic-1.0.0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var objInicSolic = &#xd;
&#xd;
&#xd;
function(company ,processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence){&#xd;
	&#xd;
	/*&#xd;
	 * VariÃ¡veis de acesso ao Web Service&#xd;
	 */&#xd;
	var companyWS;&#xd;
	var usuarioPublicaDoc = &quot;&quot;;&#xd;
	var senhaPublicaDoc = &quot;&quot;;&#xd;
	var linkWorkflowEngineServiceLocator = &quot;&quot;;&#xd;
	var linkTokenServiceLocator = &quot;&quot;;&#xd;
	&#xd;
	/*&#xd;
	 * VariÃ¡veis do WebService&#xd;
	 */&#xd;
	var workflowEngineServiceProvider = &apos;&apos;;&#xd;
	var workflowEngineServiceLocator = &apos;&apos;;&#xd;
	var workflowEngineService = &apos;&apos;;&#xd;
	var tokenServiceProvider = &apos;&apos;;&#xd;
	var tokenServiceLocator = &apos;&apos;;&#xd;
	var tokenService = &apos;&apos;;&#xd;
	var tokenGerado = &apos;&apos;;&#xd;
	var attachmets;&#xd;
	var apointments;&#xd;
	var cardData;&#xd;
	var colleagueRecipient;&#xd;
	var processId;&#xd;
	var destinyActivity;&#xd;
	var obs;&#xd;
	var colleagueSender;&#xd;
	var completeTask;&#xd;
	var managerMode;&#xd;
	var threadSequence;&#xd;
	var atividadeDestino;&#xd;
	var listFields;&#xd;
	&#xd;
	&#xd;
	/*&#xd;
	 * MÃ©todos do Web Service&#xd;
	 */&#xd;
	var iniciarWorkflowEngineService = function() {&#xd;
		workflowEngineServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;WorkflowService&quot;);&#xd;
	};&#xd;
	var iniciarServiceLocator = function() {&#xd;
		workflowEngineServiceLocator = workflowEngineServiceProvider&#xd;
				.instantiate(linkWorkflowEngineServiceLocator);&#xd;
	};&#xd;
	var iniciarPortas = function() {&#xd;
		workflowEngineService = workflowEngineServiceLocator.getWorkflowEngineServicePort();&#xd;
	};&#xd;
	&#xd;
	var getToken = function(){&#xd;
		iniciarTokenService();&#xd;
		iniciarServiceLocatorToken();&#xd;
		iniciarPortasToken();&#xd;
		instantiateToken();&#xd;
	};&#xd;
	&#xd;
	var iniciarTokenService = function() {&#xd;
		tokenServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;ECMTokenService&quot;);&#xd;
	};&#xd;
	&#xd;
	var iniciarServiceLocatorToken = function() {&#xd;
		tokenServiceLocator = tokenServiceProvider&#xd;
				.instantiate(linkTokenServiceLocator);&#xd;
	};&#xd;
	&#xd;
	var iniciarPortasToken = function() {&#xd;
		tokenService = tokenServiceLocator.getTokenServicePort();&#xd;
	};&#xd;
	&#xd;
	var instantiateToken = function (){&#xd;
		tokenGerado = tokenService.getToken(usuarioPublicaDoc,senhaPublicaDoc);&#xd;
	};&#xd;
&#xd;
	var createAttachments = function(){&#xd;
		attachmets = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessAttachmentDtoArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createAppointments = function(){&#xd;
		apointments = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.ProcessTaskAppointmentDtoArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createColleagueRecipient = function(){&#xd;
		colleagueRecipient = workflowEngineServiceProvider.instantiate(&quot;net.java.dev.jaxb.array.StringArray&quot;);&#xd;
	};&#xd;
	&#xd;
	var createCardData = function(){&#xd;
		cardData = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDtoArray&quot;);&#xd;
		cardData.setItem(listFields);&#xd;
	};&#xd;
	&#xd;
	var setParametros = function(companyRef , processIdRef, destinyActivityRef ,colleagueSenderRef, obsRef, completeTaskRef,managerModeRef, threadSequenceRef){&#xd;
		companyWS = companyRef;&#xd;
		processId = processIdRef;&#xd;
		destinyActivity = destinyActivityRef;&#xd;
		colleagueSender = colleagueSenderRef;&#xd;
		obs = obsRef;&#xd;
		completeTask = completeTaskRef;&#xd;
		managerMode = managerModeRef;&#xd;
		threadSequence = threadSequenceRef;&#xd;
		listFields = new Array();&#xd;
		iniciarWorkflowEngineService();&#xd;
		iniciarServiceLocator();&#xd;
		iniciarPortas();&#xd;
		createColleagueRecipient();&#xd;
	};&#xd;
	&#xd;
	this.setColleagueRecipient = function(colleagueEnrollment){&#xd;
		var userAux = new Array(colleagueEnrollment);&#xd;
		colleagueRecipient.setItem(userAux);&#xd;
	};&#xd;
	&#xd;
	this.setCardData = function(campo,valor){&#xd;
		var keyValueDto = workflowEngineServiceProvider.instantiate(&quot;com.totvs.technology.ecm.workflow.ws.KeyValueDto&quot;);&#xd;
		keyValueDto.setKey(campo);&#xd;
		keyValueDto.setValue(valor);&#xd;
		listFields.push(keyValueDto);&#xd;
		&#xd;
	};&#xd;
	&#xd;
	&#xd;
	&#xd;
	this.inicProcess = function(){&#xd;
		createAppointments();&#xd;
		createAttachments();&#xd;
		createCardData();&#xd;
		log.info(&quot;Param user &quot; + usuarioPublicaDoc + &quot; senha &quot; + senhaPublicaDoc + &quot; company &quot; + companyWS + &quot; process &quot; + processId + &quot; atividade &quot; + destinyActivity + &quot; colleagueRec &quot; + colleagueRecipient + &quot; observa &quot; + obs + &quot; colleagueSed &quot; + colleagueSender + &quot; completeTask &quot; + completeTask + &quot; attach &quot; + attachmets + &quot; cardData &quot; + cardData + &quot; appoin &quot; + apointments + &quot; manager &quot; + managerMode);&#xd;
		var keyValueDtoArrayResult = workflowEngineService.startProcessClassic(usuarioPublicaDoc, senhaPublicaDoc, companyWS, processId, destinyActivity ,colleagueRecipient, obs, colleagueSender, completeTask, attachmets, cardData, apointments, managerMode);&#xd;
		&#xd;
	};&#xd;
	&#xd;
	var setConfigServer = function() {&#xd;
		var config = new objDataSet(&quot;configServer&quot;);&#xd;
		config.buscar();&#xd;
		var configServer = config.getDados();&#xd;
&#xd;
		try {&#xd;
			for ( var posValues in configServer.values) {&#xd;
				usuarioPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;usuarioPublicaDoc&quot;);&#xd;
				senhaPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;senhaPublicaDoc&quot;);&#xd;
				linkTokenServiceLocator = configServer.getValue(posValues,&#xd;
				&quot;tokenServiceLocator&quot;);&#xd;
				&#xd;
				linkWorkflowEngineServiceLocator = configServer.getValue(posValues,&#xd;
				&quot;workflowEngineServiceLocator&quot;);&#xd;
&#xd;
				erroConfigServer = false;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			throw &apos;Falha ao utilizar o objInicSolic, n~ça encontrado dataSet configServer. CÃ³digo Erro: 40.&apos;;&#xd;
		}&#xd;
	};&#xd;
	&#xd;
	/**&#xd;
	 * Construtor&#xd;
	 * &#xd;
	 * @author rodrigo.neto&#xd;
	 */&#xd;
	__construct = function(company, processId, destinyActivity, colleagueSender, obs ,completeTask, managerMode, threadSequence) {&#xd;
		setConfigServer();&#xd;
		getToken();&#xd;
		setParametros(company, processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence);&#xd;
	}(company, processId, destinyActivity, colleagueSender, obs, completeTask, managerMode, threadSequence);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_form_1-2-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/*&#xd;
 * Arquivo respons�vel por fun��es de manipula��o de form do events. &#xd;
 */&#xd;
&#xd;
/**&#xd;
 * Bloqueia o campo para n�o ser edit�vel no formul�rio&#xd;
 */&#xd;
function bloquearCampo(form, nomeCampo) {&#xd;
	form.setEnabled(nomeCampo, false);&#xd;
}&#xd;
/**&#xd;
 * Debloqueio o campo para n�o ser edit�vel no formul�rio&#xd;
 */&#xd;
function desbloquearCampo(form, nomeCampo) {&#xd;
	form.setEnabled(nomeCampo, true);&#xd;
}&#xd;
/**&#xd;
 * Retorna o valor de um campo quando usado o FormValidade&#xd;
 * &#xd;
 * Paramns: * Form, * Nome do Campo&#xd;
 */&#xd;
function buscarValorCampo(form, nomeCampo) {&#xd;
	return form.getValue(nomeCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Gravar o valor no campo passado&#xd;
 * &#xd;
 * @param form&#xd;
 *            Parametro do m�todo existente no displayFields&#xd;
 * @param nomeCampo&#xd;
 *            Name do Campo que deseja salvar o valor&#xd;
 * @param valorCampo&#xd;
 *            Valor que ser� gravado no campo informado&#xd;
 */&#xd;
function gravarValorCampo(form, nomeCampo, valorCampo) {&#xd;
	form.setValue(nomeCampo, valorCampo);&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca e grava o Nome do Usu�rio Logado no Campo informado&#xd;
 * &#xd;
 * @param form&#xd;
 *            Parametro do m�todo existente no displayFields&#xd;
 * @param nomeCampo&#xd;
 *            Name do Campo que deseja salvar o valor&#xd;
 */&#xd;
function setNomeUsuarioLogado(form, nomeCampo) {&#xd;
	gravarValorCampo(form, nomeCampo, buscarNomeUsuarioLogado());&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca e grava a Data atual no Campo informado&#xd;
 * &#xd;
 * @param form&#xd;
 *            Parametro do m�todo existente no displayFields&#xd;
 * @param nomeCampo&#xd;
 *            Name do Campo que deseja salvar o valor&#xd;
 */&#xd;
function setDataAtual(form, nomeCampo) {&#xd;
	gravarValorCampo(form, nomeCampo, buscarDataAtual());&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_dataSet_1-5-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Objeto para efetuar a consulta de DataSet&apos;s&#xd;
 * &#xd;
 * @param nomeDataSet&#xd;
 *            Informar o Nome do DataSet que deseja efetuar a busca&#xd;
 * @author sergio.santos&#xd;
 */&#xd;
var objDataSet = function(nomeDataSet) {&#xd;
	var metodoFiltroAnd = &apos;&apos;;&#xd;
	var metodoFiltroOr = &apos;&apos;;&#xd;
	var nameDataSet = &apos;&apos;;&#xd;
	var filtros = [];&#xd;
	var ordenacao = [];&#xd;
	var campos = [];&#xd;
	var dados = &apos;&apos;;&#xd;
&#xd;
	var setMetodoFiltro = function() {&#xd;
		metodoFiltroAnd = ConstraintType.MUST;&#xd;
		metodoFiltroOr = ConstraintType.SHOULD;&#xd;
	};&#xd;
	var setNameDataSet = function(nomeDataSet) {&#xd;
		if (nomeDataSet == &apos;&apos;) {&#xd;
			throw &apos;Nome do dataSet n�o informado.&apos;;&#xd;
		}&#xd;
&#xd;
		nameDataSet = nomeDataSet;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para cadastrar filtro na busca do DataSet&#xd;
	 * &#xd;
	 * @param nomeColuna&#xd;
	 *            Informar a string com o Nome da coluna que ser� usado para&#xd;
	 *            filtro&#xd;
	 * @param filtroInicio&#xd;
	 *            Informar o valor que seja filtrar, se omitido o filtroFim ser�&#xd;
	 *            filtrado com valor �nico&#xd;
	 * @param filtroFim&#xd;
	 *            Informar o valor que seja filtrar como fim de&#xd;
	 *            intervalo/between, n�o obrigat�rio, caso deseja filtro com&#xd;
	 *            valor �nico. Exemplo: carro = 1&#xd;
	 * @param metodoFiltroAnd&#xd;
	 *            Informar True ou False, em caso de omiss�o ser� conderado True&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setFiltro = function(nomeColuna, filtroInicio, filtroFim, condicaoAnd) {&#xd;
		if (nomeColuna == &apos;&apos;) {&#xd;
			throw &apos;Nome da Coluna n�o informado.&apos;;&#xd;
		}&#xd;
&#xd;
		/*&#xd;
		 * Em caso de n�o ser informado o metodo do Filtro ser� atribuido a&#xd;
		 * condi��o AND&#xd;
		 */&#xd;
		var metodoFiltro = (condicaoAnd || condicaoAnd == null) ? metodoFiltroAnd&#xd;
				: metodoFiltroOr;&#xd;
&#xd;
		if (filtroFim == null &amp;&amp; filtroInicio != null) {&#xd;
			filtroFim = filtroInicio;&#xd;
		}&#xd;
&#xd;
		filtros.push(DatasetFactory.createConstraint(nomeColuna, filtroInicio,&#xd;
				filtroFim, metodoFiltro));&#xd;
	};&#xd;
	var clearFiltro = function() {&#xd;
		filtros = [];&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para cadastrar a ordem desejada&#xd;
	 * &#xd;
	 * @param order&#xd;
	 *            Informar a ordem desejada&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setOrdenacao = function(order) {&#xd;
		if (order == &apos;&apos;) {&#xd;
			throw &apos;Order n�o informado.&apos;;&#xd;
		}&#xd;
&#xd;
		ordenacao.push(order);&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para cadastrar os campos que deseja exibi��o&#xd;
	 * &#xd;
	 * @param nomeCampo&#xd;
	 *            Informar o Nome do Campo&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.setCampo = function(nomeCampo) {&#xd;
		/*if (nomeCampo == &apos;&apos;) {&#xd;
			throw &apos;Nome do Campo n�o informado.&apos;;&#xd;
		}*/&#xd;
&#xd;
		campos.push(nomeCampo);&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para buscar os dados do DataSet&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.buscar = function() {&#xd;
		/*&#xd;
		 * campos = null; filtros = null;&#xd;
		 */&#xd;
		ordenacao = null;&#xd;
&#xd;
		dados = DatasetFactory.getDataset(nameDataSet, campos, filtros,&#xd;
				ordenacao);&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para filtrar os dados do DataSet no &quot;Server Client&quot; conforme&#xd;
	 * solicitado no setFilter, como o sistema n�o est� filtrando nativamente&#xd;
	 * este m�todo faz o filtro ap�s o retorno completo do dataSet.&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.filtrarBusca = function() {&#xd;
		this.buscar();&#xd;
&#xd;
		var novoDados = [];&#xd;
		var nomeCampos = [];&#xd;
		var valorDataSet = &apos;&apos;;&#xd;
		var nomeCampoFiltrado = &apos;&apos;;&#xd;
&#xd;
		if(filtros.length &gt; 0){&#xd;
			for ( var i in filtros) {&#xd;
				if (filtros[i]._type == 1) {&#xd;
					nomeCampoFiltrado = filtros[i]._field;&#xd;
	&#xd;
					for ( var posValues in dados.values) {&#xd;
						valorDataSet = eval(&quot;dados.values[posValues].&quot;&#xd;
								+ nomeCampoFiltrado);&#xd;
	&#xd;
						if (filtros[i]._initialValue == filtros[i]._finalValue&#xd;
								&amp;&amp; valorDataSet == filtros[i]._initialValue) {&#xd;
							novoDados.push(dados.values[posValues]);&#xd;
						} else if (valorDataSet &gt;= filtros[i]._initialValue&#xd;
								&amp;&amp; valorDataSet &lt;= filtros[i]._finalValue) {&#xd;
							novoDados.push(dados.values[posValues]);&#xd;
						}&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
			&#xd;
			dados.values = novoDados;&#xd;
		}&#xd;
&#xd;
		return dados;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo de uso interno para retirar os campos do filtro&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	popularDadosFiltrados = function() {&#xd;
&#xd;
		return;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para buscar o valor de um campo&#xd;
	 * &#xd;
	 * @param campoBuscar&#xd;
	 *            string com nome do campo que ir� informar o valor do filtro&#xd;
	 * @param valorBuscar&#xd;
	 *            string com o valor do campo que deseja filtrar&#xd;
	 * @param campoRetorno&#xd;
	 *            string com o nome do campo que deseja o retorno&#xd;
	 * @returns string com valor do campo&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.buscarCampo = function(campoBuscar, valorBuscar, campoRetorno) {&#xd;
		var encontrado = false;&#xd;
		var valorRetornado = &apos;&apos;;&#xd;
		this.setCampo(campoRetorno);&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		dadosLoop: for ( var posValues in dados.values) {&#xd;
			if (dados.getValue(posValues, campoBuscar) == valorBuscar) {&#xd;
				valorRetornado = dados.getValue(posValues, campoRetorno);&#xd;
				encontrado = true;&#xd;
				break dadosLoop;&#xd;
			}&#xd;
		}&#xd;
&#xd;
		if (!encontrado) {&#xd;
			log.info(&quot;&lt;&lt; Erro objDataSet: N�o encontrado o valor do campo &quot;&#xd;
					+ campoRetorno + &quot; para o dataSet &quot; + nameDataSet + &quot; &gt;&gt;&quot;);&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		return valorRetornado;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para verificar se valor informado existe no dataSet. Este m�todo&#xd;
	 * limpa todo o filtro de dataSet e inicia novamente em caso de chamar mais&#xd;
	 * de uma vez o mesmo objeto.&#xd;
	 * &#xd;
	 * @param nomeCampo&#xd;
	 *            Informar o nome do campo que deseja verificar&#xd;
	 * @param valorCampoArray&#xd;
	 *            Informar um array com o valor ou valores de campos que dejesa&#xd;
	 *            que seja encontrado, qualquer identifica��o ser� retornado&#xd;
	 *            true&#xd;
	 * @returns Ser� retornado se o campo informado foi localizado na lista do&#xd;
	 *          dataSet&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.isExists = function(nomeCampo, valorCampoArray) {&#xd;
		clearFiltro();&#xd;
&#xd;
		var existe = false;&#xd;
&#xd;
		for ( var posCampo in valorCampoArray) {&#xd;
			this.setFiltro(nomeCampo, valorCampoArray[posCampo],&#xd;
					valorCampoArray[posCampo], false);&#xd;
		}&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		dadosLoop: for ( var posValues in dados.values) {&#xd;
			for ( var posCampo in valorCampoArray) {&#xd;
				if (dados.getValue(posValues, nomeCampo) == valorCampoArray[posCampo]) {&#xd;
					existe = true;&#xd;
					break dadosLoop;&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		return existe;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para buscar a �ltima atividade executada. Lembrando que se existir&#xd;
	 * Exclusivo dever� ser contado na hora de informar o campo numPosicao&#xd;
	 * &#xd;
	 * @param solicitacaoId&#xd;
	 *            C�digo da Solicita��o&#xd;
	 * @param numPosicao&#xd;
	 *            Informar o n�mero de posi��es que devemos localizar, caso&#xd;
	 *            queira a atual informar 0, �ltima informar 1, penultima&#xd;
	 *            informar 2 e etc.&#xd;
	 * @returns valor Retonar o valor do campo solicitado, em caso de n�o&#xd;
	 *          identificado � retornado NULL&#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.getAtividadeIdAnterior = function(solicitacaoId, numPosicao) {&#xd;
		if (nomeDataSet == &apos;&apos;) {&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		this.setFiltro(&apos;processHistoryPK.processInstanceId&apos;, solicitacaoId,&#xd;
				solicitacaoId, true);&#xd;
&#xd;
		this.setCampo(&apos;stateSequence&apos;);&#xd;
&#xd;
		this.setOrdenacao(&apos;processHistoryPK.movementSequence&apos;);&#xd;
&#xd;
		this.buscar();&#xd;
&#xd;
		var qtd = dados.values.length;&#xd;
		var posicao;&#xd;
&#xd;
		clearFiltro();&#xd;
&#xd;
		posicao = qtd - numPosicao - 1;&#xd;
&#xd;
		if (posicao &lt; 0) {&#xd;
			return null;&#xd;
		}&#xd;
&#xd;
		return dados.getValue(posicao, &apos;stateSequence&apos;);&#xd;
	};&#xd;
	this.getDados = function() {&#xd;
		return dados;&#xd;
	}&#xd;
	var __construct = function(nomeDataSet) {&#xd;
		setMetodoFiltro();&#xd;
		setNameDataSet(nomeDataSet);&#xd;
	}(nomeDataSet);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_objAnexo_1-5-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Objeto com funcionalidade de gerenciar o Nome do Diret�rio&#xd;
 * &#xd;
 * @param type&#xd;
 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
 *            necess�rio informar nomeDiretorios&#xd;
 * @param nomeDiretorio&#xd;
 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
 */&#xd;
var objParametro = function(type, nomeDiretorio) {&#xd;
	var tipo = &apos;&apos;;&#xd;
	var nomePasta = &apos;&apos;;&#xd;
	/**&#xd;
	 * Retonar o Tipo&#xd;
	 * &#xd;
	 * @returns tipo Retonar o Tipo&#xd;
	 */&#xd;
	this.getTipo = function() {&#xd;
		return tipo;&#xd;
	};&#xd;
	/**&#xd;
	 * Retonar o nomePasta&#xd;
	 * &#xd;
	 * @returns nomePasta Retonar o nomePasta&#xd;
	 */&#xd;
	this.getNomePasta = function() {&#xd;
		return nomePasta;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar o Tipo&#xd;
	 * &#xd;
	 * @returns tipo Retornar o tipo&#xd;
	 */&#xd;
	this.getTipo = function() {&#xd;
		return tipo;&#xd;
	};&#xd;
	/**&#xd;
	 * Cadastrar o Parametro de nome de Pasta&#xd;
	 * &#xd;
	 * @param type&#xd;
	 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
	 *            necess�rio informar nomeDiretorios&#xd;
	 * @param nomeDiretorio&#xd;
	 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
	 */&#xd;
	var setPasta = function(type, nomeDiretorio) {&#xd;
		/*&#xd;
		 * type = 1 (Espera string no nomeDiretorio)&#xd;
		 */&#xd;
		if (type == 1) {&#xd;
			if (nomeDiretorio == &apos;&apos;) {&#xd;
				throw &apos;Falha ao utilizar o objAnexo.setParametro, necess�rio string para nomeDiretorio.&apos;;&#xd;
			}&#xd;
&#xd;
			tipo = type;&#xd;
			nomePasta = nomeDiretorio;&#xd;
		}&#xd;
		/*&#xd;
		 * type = 2 (Gera automaticamente o nomeDiretorio com Ano/Mes - YYYY/mm)&#xd;
		 */&#xd;
		else if (type == 2) {&#xd;
			tipo = type;&#xd;
&#xd;
			nomePasta = getAnoMes();&#xd;
		} else {&#xd;
			throw &apos;Falha ao utilizar o objAnexo.setParametro, necess�rio type v�lido.&apos;;&#xd;
		}&#xd;
&#xd;
		// log.info(&apos;Diretorio adicionado para publicao: &apos; + nomePasta);&#xd;
	};&#xd;
	var getAnoMes = function() {&#xd;
		var dataAtual = new Date();&#xd;
		var mes = (&apos;0&apos; + (dataAtual.getMonth() + 1)).slice(-2);&#xd;
		var ano = dataAtual.getFullYear();&#xd;
		var mesAno = ano + &quot;/&quot; + mes;&#xd;
&#xd;
		return mesAno;&#xd;
	};&#xd;
	var __construct = function(type, nomeDiretorio) {&#xd;
		setPasta(type, nomeDiretorio);&#xd;
	}(type, nomeDiretorio);&#xd;
};&#xd;
&#xd;
/**&#xd;
 * Objeto criado para efetuar a publica��o de Documentos e Anexos&#xd;
 */&#xd;
var objAnexo = function(diretorioRaiz) {&#xd;
	/*&#xd;
	 * Vari�veis de acesso ao Web Service&#xd;
	 */&#xd;
	var usuarioPublicaDoc = &quot;&quot;;&#xd;
	var senhaPublicaDoc = &quot;&quot;;&#xd;
	var linkFolderServiceLocator = &quot;&quot;;&#xd;
	var linkDocumentServiceLocator = &quot;&quot;;&#xd;
	var separadorPalavraChave = &apos; &apos;;&#xd;
&#xd;
	/*&#xd;
	 * Vari�veis de Propriedade do Anexo&#xd;
	 */&#xd;
	var comentario = &apos;&apos;;&#xd;
	var palavraschave = &apos;&apos;;&#xd;
	var desc_versaorevisao = &quot;Versao Inicial&quot;;&#xd;
	var versaoRevisao = &quot;1.000&quot;;&#xd;
	var dtValido = buscarDataAtualSistema();&#xd;
	var doc_expira = false;&#xd;
	var dtExpira = buscarDataAtualSistema();&#xd;
	var tipo_docto_H = &quot;1&quot;;&#xd;
	var notificaEMail = false;&#xd;
	var permiteDownload = true;&#xd;
	var existeNivel = false;&#xd;
	var idPastaCriada = 0;&#xd;
	var assunto_H = &quot;1&quot;;&#xd;
	var usuarioLogado = buscarUsuarioLogado();&#xd;
	var empresa = buscarEmpresa();&#xd;
	var idSolicitacao = buscarIdSolicitacao();&#xd;
&#xd;
	/*&#xd;
	 * Vari�veis do WebService&#xd;
	 */&#xd;
	var folderServiceProvider = &apos;&apos;;&#xd;
	var folderServiceLocator = &apos;&apos;;&#xd;
	var folderService = &apos;&apos;;&#xd;
	var listDiretorios = [];&#xd;
	var pastaRaiz = &apos;&apos;;&#xd;
	var pastaPublicacao = &apos;&apos;;&#xd;
&#xd;
	/*&#xd;
	 * M�todos do Web Service&#xd;
	 */&#xd;
	var iniciarFolderService = function() {&#xd;
		// log.info(&quot;Instanciando webservice pastas&quot;);&#xd;
&#xd;
		folderServiceProvider = ServiceManager&#xd;
				.getServiceInstance(&quot;FolderService&quot;);&#xd;
	};&#xd;
	var iniciarServiceLocator = function() {&#xd;
		// log.info(&quot;Instanciando Locator pastas&quot;);&#xd;
		folderServiceLocator = folderServiceProvider&#xd;
				.instantiate(linkFolderServiceLocator);&#xd;
	};&#xd;
	var iniciarPortas = function() {&#xd;
		// log.info(&quot;Instanciando port pastas&quot;);&#xd;
		folderService = folderServiceLocator.getFolderServicePort();&#xd;
	};&#xd;
	var buscarPastaPublicacao = function() {&#xd;
		if (!checkListDiretorios()) {&#xd;
			throw &apos;Falha ao utilizar a publica��o de Documentos, necess�rio cadastrar paramentros usando objAnexo.setParametro&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		if (!checkPastaRaiz()) {&#xd;
			throw &apos;Falha ao utilizar objAnexo sem informar Pasta Pai para publica��o do anexo. C�digo Erro: 30.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		var folders = &apos;&apos;;&#xd;
		var idPasta = &apos;&apos;;&#xd;
&#xd;
		var idPastaCriadaNova = &apos;&apos;;&#xd;
		var nome_pasta = &apos;&apos;;&#xd;
		var nome_pasta_publicacao = &apos;&apos;;&#xd;
&#xd;
		// for ( var x = 0; x &lt; listDiretorios.length; x++) {&#xd;
		for ( var x in listDiretorios) {&#xd;
			idPasta = (idPastaCriada != 0) ? idPastaCriada : pastaRaiz;&#xd;
&#xd;
			// log.info(&quot;Busca do diretorio: &quot; + idPasta);&#xd;
&#xd;
			folders = folderService.getSubFolders(usuarioPublicaDoc,&#xd;
					senhaPublicaDoc, empresa, idPasta, usuarioLogado);&#xd;
&#xd;
			if (folders.getItem() != null) {&#xd;
				listDiretorios: for (var y = 0; y &lt; folders.getItem().length; y++) {&#xd;
					nome_pasta = &apos;&apos;;&#xd;
					nome_pasta_publicacao = &apos;&apos;;&#xd;
&#xd;
					var pasta = folders.getItem(y);&#xd;
					nome_pasta = pasta.getDocumentDescription();&#xd;
&#xd;
					if (nome_pasta != listDiretorios[x].getNomePasta()) {&#xd;
						existeNivel = false;&#xd;
						// log.info(&quot;Diret�rio inexistente: &quot; +&#xd;
						// pasta.getDocumentDescription() + &quot; para &quot; +&#xd;
						// listDiretorios[x].getNomePasta());&#xd;
						nome_pasta_publicacao = listDiretorios[x]&#xd;
								.getNomePasta();&#xd;
					} else {&#xd;
						existeNivel = true;&#xd;
						idPastaCriada = pasta.getDocumentId();&#xd;
						// log.info(&quot;Diretorio encontrado: &quot; +&#xd;
						// pasta.getDocumentDescription() + &quot; diretorio: &quot; +&#xd;
						// listDiretorios[x].getNomePasta() + &quot; codigo: &quot; +&#xd;
						// pasta.getDocumentId());&#xd;
						break listDiretorios;&#xd;
					}&#xd;
				}&#xd;
			} else {&#xd;
				nome_pasta_publicacao = listDiretorios[x].getNomePasta();&#xd;
			}&#xd;
&#xd;
			if (existeNivel == false) {&#xd;
				idPastaCriadaNova = folderService.createSimpleFolder(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, java.lang&#xd;
								.Integer(empresa), java.lang.Integer(idPasta),&#xd;
						usuarioLogado, nome_pasta_publicacao);&#xd;
&#xd;
				// for ( var propriedade in idPastaCriadaNova) {&#xd;
				// log.info(propriedade + &quot;: &quot; +&#xd;
				// idPastaCriadaNova[propriedade]);&#xd;
				// }&#xd;
&#xd;
				// log.info(&quot;Novo diret�rio criado Id &quot; +&#xd;
				// idPastaCriadaNova.getItem(0).getDocumentId());&#xd;
				idPastaCriada = idPastaCriadaNova.getItem(0).getDocumentId();&#xd;
			}&#xd;
		}&#xd;
&#xd;
		return idPastaCriada;&#xd;
	};&#xd;
	var checkPastaRaiz = function() {&#xd;
		return (pastaRaiz != &apos;&apos;);&#xd;
	};&#xd;
	var checkListDiretorios = function() {&#xd;
		try {&#xd;
			if (typeof listDiretorios[0].getTipo()) {&#xd;
				return true;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			return false;&#xd;
		}&#xd;
	};&#xd;
	var buscarAnexos = function() {&#xd;
		// var pastaPublicacao = idPastaCriada;&#xd;
		// pastaPublicacao = buscarPastaPublicacao_antigo();&#xd;
		pastaPublicacao = buscarPastaPublicacao();&#xd;
&#xd;
		if (!pastaPublicacao) {&#xd;
			throw &apos;Falha ao selecionar o diretório para publica��o do anexo. C�digo Erro: 10.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		// log.info(&quot;Pasta publicacao: &quot; + pastaPublicacao);&#xd;
&#xd;
		var cal = java.util.Calendar.getInstance();&#xd;
		if (dtExpira == &quot;&quot;) {&#xd;
			cal.add(java.util.Calendar.YEAR, 1);&#xd;
		} else {&#xd;
			cal.setTime(new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;)&#xd;
					.parse(dtExpira));&#xd;
		}&#xd;
		dtExpira = cal;&#xd;
&#xd;
		var cal = java.util.Calendar.getInstance();&#xd;
		cal.setTime(new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;)&#xd;
				.parse(dtValido));&#xd;
		dtValido = cal;&#xd;
		var processConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.processInstanceId&quot;, idSolicitacao,&#xd;
				idSolicitacao, ConstraintType.MUST);&#xd;
		var companyConstraint = DatasetFactory.createConstraint(&#xd;
				&quot;processAttachmentPK.companyId&quot;, empresa, empresa,&#xd;
				ConstraintType.MUST);&#xd;
		var attachFields = new Array(&quot;documentId&quot;,&#xd;
				&quot;processAttachmentPK.attachmentSequence&quot;, &quot;version&quot;);&#xd;
		var attachConstList = new Array(processConstraint, companyConstraint);&#xd;
&#xd;
		var attachDataset = DatasetFactory.getDataset(&quot;processAttachment&quot;,&#xd;
				attachFields, attachConstList, new Array(&#xd;
						&quot;processAttachmentPK.attachmentSequence&quot;));&#xd;
&#xd;
		publicarAnexos(attachDataset);&#xd;
	};&#xd;
	var publicarAnexos = function(attachDataset) {&#xd;
		var fichario = &apos;&apos;;&#xd;
&#xd;
		for (var i = 0; i &lt; attachDataset.rowsCount; i++) {&#xd;
			if (attachDataset.getValue(i,&#xd;
					&quot;processAttachmentPK.attachmentSequence&quot;) == 1) {&#xd;
				fichario = attachDataset.getValue(i, &quot;documentId&quot;);&#xd;
			}&#xd;
&#xd;
			if (attachDataset.getValue(i, &quot;documentId&quot;) != fichario) {&#xd;
				// log.info(&quot;Instanciando webservice&quot;);&#xd;
				var documentServiceProvider = ServiceManager&#xd;
						.getServiceInstance(&quot;DocumentService&quot;);&#xd;
				// log.info(&quot;Instanciando Locator&quot;);&#xd;
				var documentServiceLocator = documentServiceProvider&#xd;
						.instantiate(linkDocumentServiceLocator);&#xd;
				// log.info(&quot;Instanciando port&quot;);&#xd;
				var documentService = documentServiceLocator&#xd;
						.getDocumentServicePort();&#xd;
&#xd;
				var document = documentService.getDocumentVersion(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa,&#xd;
						attachDataset.getValue(i, &quot;documentId&quot;), attachDataset&#xd;
								.getValue(i, &quot;version&quot;), usuarioLogado);&#xd;
				var doc = document.getItem(0);&#xd;
&#xd;
				// Documento novo, seta o documentId e version para 0 para n�o&#xd;
				// criar duplicado com o mesmo n�mero de documento&#xd;
				doc.setDocumentId(0);&#xd;
				doc.setVersion(0);&#xd;
				doc.setParentDocumentId(new java.lang.Integer(pastaPublicacao));&#xd;
&#xd;
				// doc.setDocumentDescription(codificacao +&#xd;
				// hAPI.getCardValue(&quot;textDescricao&quot;));&#xd;
				doc.setAdditionalComments(comentario);&#xd;
				doc.setKeyWord(palavraschave);&#xd;
				doc.setVersionDescription(desc_versaorevisao);&#xd;
				doc.setDocumentTypeId(tipo_docto_H);&#xd;
				doc.setDownloadEnabled(permiteDownload);&#xd;
				doc.setExpires(doc_expira);&#xd;
				doc.setExpirationDate(dtExpira);&#xd;
				doc.setUserNotify(notificaEMail);&#xd;
				doc.setValidationStartDate(dtValido);&#xd;
				doc.setTopicId(new java.lang.Integer(assunto_H));&#xd;
				doc.setPublisherId(usuarioLogado);&#xd;
				doc.setColleagueId(usuarioLogado);&#xd;
				doc.setInheritSecurity(true);&#xd;
				var pos = versaoRevisao.indexOf(&quot;.&quot;);&#xd;
				doc.setVersion(new java.lang.Integer(versaoRevisao.substring(0,&#xd;
						pos)&#xd;
						+ versaoRevisao.substring(pos + 1)));&#xd;
&#xd;
				doc.setVersionOption(&quot;0&quot;);&#xd;
&#xd;
				doc.setVolumeId(&quot;Default&quot;);&#xd;
				try {&#xd;
					doc.setUpdateIsoProperties(false);&#xd;
				} catch (e) {&#xd;
				}&#xd;
				document.setItem(0, doc);&#xd;
&#xd;
				var fContent = documentService.getDocumentContent(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa,&#xd;
						attachDataset.getValue(i, &quot;documentId&quot;), usuarioLogado,&#xd;
						attachDataset.getValue(i, &quot;version&quot;), doc&#xd;
								.getPhisicalFile());&#xd;
&#xd;
				// Se��o para atachar o arquivo ao documento&#xd;
				var attach = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.Attachment&quot;);&#xd;
				attach.setFileName(doc.getPhisicalFile());&#xd;
				attach.setFilecontent(fContent);&#xd;
				attach.setPrincipal(true);&#xd;
&#xd;
				var listAttach = new Array();&#xd;
				listAttach[0] = attach;&#xd;
				attachArray = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.AttachmentArray&quot;);&#xd;
				attachArray.setItem(listAttach);&#xd;
&#xd;
				var relatedArr = documentServiceProvider&#xd;
						.instantiate(&quot;com.totvs.technology.ecm.dm.ws.RelatedDocumentDtoArray&quot;);&#xd;
&#xd;
				// log.info(&quot;Chamando webservice de cria��o de documentos&quot;);&#xd;
				// Cria o documento no Webdesk&#xd;
				var createDoc = documentService.createDocument(&#xd;
						usuarioPublicaDoc, senhaPublicaDoc, empresa, document,&#xd;
						attachArray, null, null, relatedArr);&#xd;
&#xd;
				createDoc.getItem(0);&#xd;
			}&#xd;
		}&#xd;
	};&#xd;
	/**&#xd;
	 * Método para setar as strings da Palavra Chave&#xd;
	 * &#xd;
	 * @param palavraChave&#xd;
	 *            Passar a string como parametro, o método já trata a separação&#xd;
	 *            de atributos&#xd;
	 */&#xd;
	var setPalavrasChave = function(palavraChave) {&#xd;
		palavraschave += separadorPalavraChave + palavraChave;&#xd;
	};&#xd;
	/**&#xd;
	 * Método para setar as strings do Comentário&#xd;
	 * &#xd;
	 * @param comentario&#xd;
	 *            Passar a string como parametro para o método&#xd;
	 */&#xd;
	var setComentario = function(stringComentario) {&#xd;
		comentario = stringComentario;&#xd;
	};&#xd;
	var setPastaRaiz = function(diretorioRaiz) {&#xd;
		if (diretorioRaiz == &apos;&apos; || diretorioRaiz == undefined) {&#xd;
			throw &apos;Falha ao utilizar o m�todo objAnexo sem informar o Diret�rio Raiz. C�digo Erro: 20.&apos;;&#xd;
			return false;&#xd;
		}&#xd;
&#xd;
		pastaRaiz = diretorioRaiz;&#xd;
	};&#xd;
	/**&#xd;
	 * M�todo para cadastro de Parametros, poder� ser registrado N parametros e&#xd;
	 * ser� efetuado a publica��o a ordem respectivamente cadastrada.&#xd;
	 * &#xd;
	 * @param type&#xd;
	 *            1-nomeDiretorio informado, espera string; 2-Ano/Mes atual, n�o&#xd;
	 *            necess�rio informar nomeDiretorios&#xd;
	 * @param nomeDiretorio&#xd;
	 *            Informar a string do nome do diret�rio, necess�rio type ser 1&#xd;
	 */&#xd;
	this.setParametro = function(type, nomeDiretorio) {&#xd;
		var objText = new objString(nomeDiretorio);&#xd;
		nomeDiretorio = objText.execCompleto();&#xd;
		listDiretorios.push(new objParametro(type, nomeDiretorio));&#xd;
	};&#xd;
	this.publicar = function() {&#xd;
		log.info(&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Inicio da Rotina de Publicar Documentos!&apos;);&#xd;
&#xd;
		iniciarFolderService();&#xd;
		iniciarServiceLocator();&#xd;
		iniciarPortas();&#xd;
		buscarAnexos();&#xd;
&#xd;
		log.info(&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Fim da Rotina de Publicar Documentos!&apos;);&#xd;
	};&#xd;
	var setConfigServer = function() {&#xd;
		var config = new objDataSet(&quot;configServer&quot;);&#xd;
		config.buscar();&#xd;
		var configServer = config.getDados();&#xd;
&#xd;
		try {&#xd;
			for ( var posValues in configServer.values) {&#xd;
				usuarioPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;usuarioPublicaDoc&quot;);&#xd;
				senhaPublicaDoc = configServer.getValue(posValues,&#xd;
						&quot;senhaPublicaDoc&quot;);&#xd;
				linkFolderServiceLocator = configServer.getValue(posValues,&#xd;
						&quot;folderServiceLocator&quot;);&#xd;
				linkDocumentServiceLocator = configServer.getValue(posValues,&#xd;
						&quot;documentServiceLocator&quot;);&#xd;
&#xd;
				erroConfigServer = false;&#xd;
			}&#xd;
		} catch (e) {&#xd;
			throw &apos;Falha ao utilizar o objAnexo, n�o encontrado dataSet configServer. C�digo Erro: 40.&apos;;&#xd;
		}&#xd;
	}&#xd;
	var __construct = function(diretorioRaiz) {&#xd;
		// listDiretorios = parametros;&#xd;
		setPastaRaiz(diretorioRaiz);&#xd;
		setConfigServer();&#xd;
	}(diretorioRaiz);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_objIdentificador_1-2-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
 * Objeto com funcionalidade de gerenciar o conteudo do identificador&#xd;
 * &#xd;
 * @param strungCriticidade&#xd;
 *            Informar a string da Criticidade;&#xd;
 * @param stringUnidade&#xd;
 *            Informar a string da Unidade;&#xd;
 * @param stringDataInicial&#xd;
 *            Informar a string da DataInicial;&#xd;
 * @param outrosId&#xd;
 *            Informar os demais parametros e gravar em um obj do tipo array;&#xd;
 * &#xd;
 */&#xd;
var objIdentificador = function(strCriticidade, strUnidade, strDataInicial,&#xd;
		strOutrosParam) {&#xd;
&#xd;
	var nomeCampo = &apos;campoIdentificador&apos;;&#xd;
	strPrefixoDataIniciaL = &quot;&quot;&#xd;
	//var strPrefixoDataIniciaL = &apos;DA &apos;;&#xd;
	var separador = &apos; - &apos;;&#xd;
	var tipoCriticidade = &apos;&apos;;&#xd;
	var nomeUnidade = &apos;&apos;;&#xd;
	var dataInicial = &apos;&apos;;&#xd;
	var listParametros = &apos;&apos;;&#xd;
&#xd;
	/**&#xd;
	 * Retonar o tipoCriticidade&#xd;
	 * &#xd;
	 * @returns tipoCriticidade Retonar o tipo de Criticidade&#xd;
	 */&#xd;
	this.getTipoCriticidade = function() {&#xd;
		return tipoCriticidade;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar o nomeUnidade&#xd;
	 * &#xd;
	 * @returns nomeUnidade Retonar a Unidade&#xd;
	 */&#xd;
	this.getNomeUnidade = function() {&#xd;
		return nomeUnidade;&#xd;
	};&#xd;
	/**&#xd;
	 * Retornar a dataInicial&#xd;
	 * &#xd;
	 * @returns dataInicial Retornar a Data Inicial&#xd;
	 */&#xd;
	this.getDataInicial = function() {&#xd;
		return dataInicial;&#xd;
	};&#xd;
&#xd;
	var setParametro = function(nomeParametro) {&#xd;
		if (nomeParametro != &quot;&quot;) {&#xd;
			listParametros += (listParametros != &quot;&quot;) ? separador : &apos;&apos;;&#xd;
			listParametros += nomeParametro;&#xd;
		}&#xd;
	};&#xd;
&#xd;
	var setOutrosParam = function(outrosParam) {&#xd;
		if (typeof outrosParam !== &apos;undefined&apos; &amp;&amp; outrosParam instanceof Array&#xd;
				&amp;&amp; outrosParam.length &gt; 0) {&#xd;
			for ( var pos in outrosParam) {&#xd;
				setParametro(outrosParam[pos]);&#xd;
			}&#xd;
		}&#xd;
&#xd;
		/*&#xd;
		 * if (outrosParam != null || outrosParam != &quot;&quot;){&#xd;
		 * setParametro(outrosParam); }&#xd;
		 */&#xd;
	};&#xd;
&#xd;
	var getStrIdentificador = function() {&#xd;
		return listParametros;&#xd;
	};&#xd;
&#xd;
	var setIdentificador = function() {&#xd;
		hAPI.setCardValue(nomeCampo, listParametros);&#xd;
	};&#xd;
	__construct = function(strCriticidade, strUnidade, strDataInicial,&#xd;
			strOutrosParam) {&#xd;
		setParametro(strCriticidade);&#xd;
		setParametro(strUnidade);&#xd;
		setParametro(strPrefixoDataIniciaL + strDataInicial);&#xd;
&#xd;
		setOutrosParam(strOutrosParam);&#xd;
&#xd;
		setIdentificador();&#xd;
&#xd;
		getStrIdentificador();&#xd;
&#xd;
	}(strCriticidade, strUnidade, strDataInicial, strOutrosParam);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_string_2-0-0</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var objString =&#xd;
/**&#xd;
 * objString destinado a executar funções de tratamento de string&#xd;
 * &#xd;
 * @constructor Parametro = objeto Jquery ou valor da string e TipoParametro = 1 -&#xd;
 *              objeto Jquery e 2 - para string&#xd;
 * @returns String tratada com os parametros solicitados&#xd;
 * @author sergio.santos&#xd;
 */&#xd;
function(parametro) {&#xd;
	var buscar = &apos;&apos;;&#xd;
	var texto;&#xd;
	var obj;&#xd;
	var tipoObjeto;&#xd;
	var find = &quot;&quot;;&#xd;
	var reg_replaceAll = &apos;g&apos;;&#xd;
	var reg_com_acento = &quot;áàãâäéèêëíìîïóòõôöúùûüçÁÀÃÂÄÉÈÊËÍÌÎÏÓÒÕÖÔÚÙÛÜÇ&quot;;&#xd;
	var reg_mais_espaco = &apos;\\s+&apos;;&#xd;
	var reg_caracter_especiais = &quot;ºª!@#%¨&apos;~´`&quot;;&#xd;
	var reg_aspas = &apos;&quot;&apos;;&#xd;
	var reg_interrogacao = &apos;\\?&apos;;&#xd;
	var reg_circunflexo = &apos;\\^&apos;;&#xd;
	var reg_asterisco = &apos;\\*&apos;;&#xd;
	var reg_pontoVirgula = &apos;\\;&apos;;&#xd;
	var reg_pipe = &apos;\\|&apos;;&#xd;
	var resp_sem_acento = &quot;aaaaaeeeeiiiiooooouuuucAAAAAEEEEIIIIOOOOOUUUUC&quot;;&#xd;
	var resp_unico_espaco = &apos; &apos;;&#xd;
	var resp_sem_espaco = &apos;&apos;;&#xd;
	/**&#xd;
	 * Metodo para setar os parametro obrigatórios para o objeto&#xd;
	 */&#xd;
	var setParametros = function(parametro) {&#xd;
		setObj(parametro);&#xd;
		setTexto(parametro);&#xd;
	}&#xd;
	/**&#xd;
	 * &#xd;
	 */&#xd;
	var setObj = function(parametro) {&#xd;
		obj = parametro;&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para setar o campo texto com a string informada&#xd;
	 */&#xd;
	var setTexto = function(string) {&#xd;
		texto = string;&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para setar o campo Find, usado em toda expressão regular&#xd;
	 */&#xd;
	var setFind = function(buscar) {&#xd;
		find = new RegExp(buscar, reg_replaceAll);&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para executar o Replace em cada item&#xd;
	 */&#xd;
	var execReplaceNOVO = function(buscar, substituir) {&#xd;
		setFind(buscar);&#xd;
		&#xd;
		var textoAux = new String(texto);&#xd;
		texto = textoAux.replace(find, substituir);&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para retirar acentuacoes&#xd;
	 */&#xd;
	var retirarAcentuacoes = function() {		&#xd;
		for (var pos = 0; pos &lt; reg_com_acento.length; pos++) {&#xd;
			execReplaceNOVO(reg_com_acento[pos], resp_sem_acento[pos]);&#xd;
		}&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar 2 ou mais espaço&#xd;
	 */&#xd;
	var retirarExcessoEspaco = function() {&#xd;
		execReplaceNOVO(reg_mais_espaco, resp_unico_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Caracteres especiais&#xd;
	 */&#xd;
	var retirarCaracteresEspeciais = function() {&#xd;
		for ( var pos in reg_caracter_especiais) {&#xd;
			execReplaceNOVO(reg_caracter_especiais[pos], resp_sem_espaco);&#xd;
		}&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Acento circunflexo&#xd;
	 */&#xd;
	var retirarAcentoCircunflexo = function() {&#xd;
		execReplaceNOVO(reg_circunflexo, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Ponto e virgula&#xd;
	 */&#xd;
	var retirarPontoVirgula = function() {&#xd;
		execReplaceNOVO(reg_pontoVirgula, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Pipe&#xd;
	 */&#xd;
	var retirarPipe = function() {&#xd;
		execReplaceNOVO(reg_pipe, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Interrogação&#xd;
	 */&#xd;
	var retirarInterrogacao = function() {&#xd;
		execReplaceNOVO(reg_interrogacao, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Asterisco&#xd;
	 */&#xd;
	var retirarAsterisco = function() {&#xd;
		execReplaceNOVO(reg_asterisco, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar Aspas&#xd;
	 */&#xd;
	var retirarAspas = function() {&#xd;
		execReplaceNOVO(reg_aspas, resp_sem_espaco);&#xd;
	};&#xd;
	/**&#xd;
	 * Funcao para tratar caracteres WebService&#xd;
	 */&#xd;
	var retirarCaracteresWebService = function() {&#xd;
		retirarPontoVirgula();&#xd;
		retirarPipe();&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para retirar todos os caracteres especiais, espaços duplos e&#xd;
	 * acentuacoes&#xd;
	 * &#xd;
	 * @returns Texto processado conforme os parametros solicitados&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	this.execCompleto = function() {&#xd;
		retirarAcentuacoes();&#xd;
		retirarCaracteresEspeciais();&#xd;
		retirarExcessoEspaco();&#xd;
		retirarAcentoCircunflexo();&#xd;
		retirarInterrogacao();&#xd;
		retirarAsterisco();&#xd;
		retirarAspas();&#xd;
		retirarCaracteresWebService();&#xd;
		&#xd;
		return getTexto();&#xd;
	};&#xd;
	/**&#xd;
	 * Metodo para retornar o valor do texto&#xd;
	 * &#xd;
	 * @returns Texto&#xd;
	 */&#xd;
	var getTexto = function() {&#xd;
		texto = texto.toUpperCase();&#xd;
		log.info(&quot;Retorno string: &quot; + texto);&#xd;
		return texto;		&#xd;
	};&#xd;
	/**&#xd;
	 * Construtor&#xd;
	 * &#xd;
	 * @author sergio.santos&#xd;
	 */&#xd;
	__construct = function(parametro) {&#xd;
		setParametros(parametro);&#xd;
	}(parametro);&#xd;
};</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterTaskSave</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var ativPosInicial = 46;&#xd;
&#xd;
function afterTaskSave(colleagueId, nextSequenceId, userList) {&#xd;
	if (nextSequenceId == ativPosInicial) {&#xd;
		preencherIdentificador();&#xd;
	}&#xd;
}&#xd;
&#xd;
function preencherIdentificador() {&#xd;
	var unidade = hAPI.getCardValue(&quot;hiddenFilial&quot;);&#xd;
	var dataVencimento = hAPI.getCardValue(&quot;dtDeVencPgtoGuiaTaxaBoletos&quot;);&#xd;
	// var dataInicial = hAPI.getCardValue(&quot;dataSolicitante&quot;);&#xd;
	var emergencial = hAPI.getCardValue(&quot;pagamentoEmergencialHidden&quot;);&#xd;
	var dataFormatada = dataVencimento.split(&apos;/&apos;)[2];&#xd;
	dataFormatada += &apos;/&apos;+dataVencimento.split(&apos;/&apos;)[1];&#xd;
	dataFormatada += &apos;/&apos;+dataVencimento.split(&apos;/&apos;)[0];&#xd;
&#xd;
	if (emergencial == &quot;&quot;) {&#xd;
		 hAPI.setCardValue(&quot;campoIdentificador&quot;, dataFormatada+&apos; - N - &apos; + unidade);&#xd;
		&#xd;
	 } else {&#xd;
		hAPI.setCardValue(&quot;campoIdentificador&quot;, dataFormatada+&apos; - E - &apos; + unidade);&#xd;
	 }	&#xd;
	&#xd;
	hAPI.setCardValue(&quot;codSolicitacao&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>incrementaNrReprovacoes</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function incrementaNrReprovacoes(){&#xd;
	var nrReprovacoes = getWFParametro(&quot;nrReprovacoes&quot;);&#xd;
	if(nrReprovacoes == &quot;&quot;){&#xd;
		nrReprovacoes = 0;&#xd;
	}else{&#xd;
		nrReprovacoes = parseInt(nrReprovacoes);&#xd;
	}&#xd;
	nrReprovacoes++;&#xd;
	setWFParametro(&quot;nrReprovacoes&quot;, nrReprovacoes);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeSendData</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeSendData(customFields,customFacts){&#xd;
	&#xd;
	var CURRENT_STATE = getValue(&quot;WKNumState&quot;);&#xd;
	&#xd;
	log.info(&quot;==================================================beforeSendData - inicio &quot;+ getValue(&quot;WKDef&quot;)+&quot; - &quot;+getValue(&quot;WKNumProces&quot;)+&quot; - &quot;+getValue(&quot;WKNumState&quot;));&#xd;
&#xd;
	var tipoSolicitacao = hAPI.getCardValue(&quot;analyticsTpSolicitacao&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsTpSolicitacao&quot;);&#xd;
	var dataInicio = hAPI.getCardValue(&quot;analyticsDtInicio&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsDtInicio&quot;) ;&#xd;
	var horaInicio = hAPI.getCardValue(&quot;analyticsHrInicio&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsHrInicio&quot;);&#xd;
	var dataPrazo = hAPI.getCardValue(&quot;analyticsDtPrazo&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsDtPrazo&quot;);&#xd;
	var horaPrazo = hAPI.getCardValue(&quot;analyticsHrPrazo&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsHrPrazo&quot;);&#xd;
	var dataFim = hAPI.getCardValue(&quot;analyticsDtFim&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsDtFim&quot;);&#xd;
	var horaFim = hAPI.getCardValue(&quot;analyticsHrFim&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsHrFim&quot;);&#xd;
	var filial = hAPI.getCardValue(&quot;analyticsNmFilial&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsNmFilial&quot;);	&#xd;
	var responsavel = hAPI.getCardValue(&quot;analyticsNmResponsavelSLA&quot;) == &quot;&quot; ? &quot; &quot; : hAPI.getCardValue(&quot;analyticsNmResponsavelSLA&quot;);&#xd;
	var prazoSLA = hAPI.getCardValue(&quot;analyticsPrazoSLA&quot;) == &quot;&quot; ? &quot;0&quot; : hAPI.getCardValue(&quot;analyticsPrazoSLA&quot;);&#xd;
	&#xd;
	customFields[0] = tipoSolicitacao;&#xd;
	customFields[1] = dataInicio;&#xd;
	customFields[2] = horaInicio; 	&#xd;
	customFields[3] = dataPrazo;&#xd;
	customFields[4] = horaPrazo; &#xd;
	customFields[5] = dataFim; &#xd;
	customFields[6] = horaFim;&#xd;
	&#xd;
	customFields[7] = filial;&#xd;
	customFields[8] = responsavel;&#xd;
	customFields[9] = &apos; &apos;;&#xd;
	customFields[10] = &apos; &apos;;&#xd;
	customFields[11] = &apos; &apos;;&#xd;
	customFields[12] = &apos; &apos;;&#xd;
	customFields[13] = &apos; &apos;;&#xd;
	customFields[14] = &apos; &apos;;&#xd;
	customFields[15] = &apos; &apos;;&#xd;
	customFields[16] = &apos; &apos;;&#xd;
	customFields[17] = &apos; &apos;;&#xd;
	customFields[18] = &apos; &apos;;&#xd;
	customFields[19] = &apos; &apos;;&#xd;
	customFields[20] = &apos; &apos;;&#xd;
	customFields[21] = &apos; &apos;;&#xd;
	customFields[22] = &apos; &apos;;&#xd;
	customFields[23] = &apos; &apos;;&#xd;
	customFields[24] = &apos; &apos;;&#xd;
	customFields[25] = &apos; &apos;;&#xd;
	customFields[26] = &apos; &apos;;&#xd;
	customFields[27] = &apos; &apos;;&#xd;
	customFields[28] = &apos; &apos;;&#xd;
	customFields[29] = &apos; &apos;;&#xd;
	&#xd;
	customFacts[0] = new java.lang.Double(prazoSLA); //new java.lang.Double(&quot;40&quot;); &#xd;
	customFacts[1] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[2] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[3] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[4] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[5] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[6] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[7] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[8] = new java.lang.Double(&quot;0&quot;);&#xd;
	customFacts[9] = new java.lang.Double(&quot;0&quot;);&#xd;
	&#xd;
	log.info(&quot;================================= beforeSendData Solicitação de Pagamentos/Repasse Médico/RPA - fim &quot;+ getValue(&quot;WKNumProces&quot;));&#xd;
	log.info(&quot;============beforeSendData  tipoSolicitacao           : &quot;+customFields[0]);&#xd;
	log.info(&quot;============beforeSendData  dataInicio                : &quot;+customFields[1]);&#xd;
	log.info(&quot;============beforeSendData  horaInicio                : &quot;+customFields[2]);&#xd;
	log.info(&quot;============beforeSendData  dataPrazo                 : &quot;+customFields[3]);&#xd;
	log.info(&quot;============beforeSendData  horaPrazo                 : &quot;+customFields[4]);&#xd;
	log.info(&quot;============beforeSendData  dataFim                   : &quot;+customFields[5]);&#xd;
	log.info(&quot;============beforeSendData  horaFim                   : &quot;+customFields[6]);&#xd;
	log.info(&quot;============beforeSendData  filial                    : &quot;+customFields[7]);&#xd;
	log.info(&quot;============beforeSendData  responsavel               : &quot;+customFields[8]);&#xd;
	log.info(&quot;============beforeSendData  prazosSLA                 : &quot;+customFacts[0]);&#xd;
	log.info(&quot;==================================================beforeSendData - fim&quot;);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>formularioUtils</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function formularioUtils(){&#xd;
	&#xd;
	this.buscaCamposPaiFilho = function(arrCampos){	&#xd;
		var arrReferencia = new Array();&#xd;
		var arrResult     = new Array();&#xd;
		var cardData      = hAPI.getCardData(getValue(&quot;WKNumProces&quot;));/* Alterar aqui caso for utilizar em algum evento de formulario =&gt; form.getCardData(); */	&#xd;
		var iterator2      = cardData.entrySet().iterator();	&#xd;
		var campos        = new Array();&#xd;
		&#xd;
		arrReferencia.contains = function(obj) {		&#xd;
		    var i = this.length;&#xd;
		    while (i--) {	    	&#xd;
		        if (this[i].ref == obj) {&#xd;
		            return true;&#xd;
		        }&#xd;
		    }&#xd;
		    return false;&#xd;
		};&#xd;
		&#xd;
		arrCampos.contains = function(obj) {		&#xd;
		    var i = this.length;&#xd;
		    while (i--) {	    	&#xd;
		        if (this[i].ref == obj) {&#xd;
		            return true;&#xd;
		        }&#xd;
		    }&#xd;
			&#xd;
		    return false;&#xd;
		};&#xd;
		var lastIndice = 0;&#xd;
		while (iterator2.hasNext()) {			&#xd;
			var curField = iterator2.next();&#xd;
			var chave = curField.getKey() + &quot;&quot;;&#xd;
			var valor = &apos;&apos;;&#xd;
			var desc = &apos;&apos;;&#xd;
			if((chave.indexOf(&quot;___&quot;) &gt; -1)){&#xd;
				for(x in arrCampos){&#xd;
					var referencia = arrCampos[x][&quot;ref&quot;];&#xd;
					if(referencia != undefined){	&#xd;
						referencia = arrCampos[x][&quot;ref&quot;] + &quot;&quot;;&#xd;
						if(referencia.indexOf(chave.substring(0,chave.indexOf(&quot;___&quot;))) &gt; -1){	&#xd;
							var indice = parseInt(chave.substring(chave.indexOf(&quot;___&quot;) + 3, chave.length));&#xd;
							if(indice &gt; lastIndice){&#xd;
								lastIndice = indice;&#xd;
							}&#xd;
							if(chave == (&apos;valorBeneficio___&apos;+indice)){&#xd;
								desc = &apos;EZ_VALOR___&apos;;&#xd;
								valor = converteMoedaFloat(curField.getValue()+&quot;&quot;);&#xd;
							} else if(chave == (&apos;codCentroCustoBeneficio___&apos;+indice)) {&#xd;
								desc = &apos;EZ_CCUSTO___&apos;;&#xd;
								valor = curField.getValue();&#xd;
							}&#xd;
							campos.push({&quot;idx&quot;:indice,&quot;desc&quot;:desc,&quot;val&quot;: valor});		&#xd;
						}&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
		&#xd;
		for(var x = 1; x &lt;= lastIndice; x++){&#xd;
			var str = &quot;&quot;;	&#xd;
			for(var c in campos){&#xd;
				var indiceObject = campos[c][&quot;idx&quot;];&#xd;
				if(x ==  indiceObject){&#xd;
					str += (str?&quot;,&quot;:&quot;&quot;)+&quot;&apos;&quot;+campos[c][&quot;desc&quot;]+&quot;&apos;&quot;+&quot;:&quot;+					&#xd;
					&quot;{&quot; +&#xd;
						&quot;&apos;name&apos; :&apos;&quot; + campos[c][&quot;desc&quot;] +&quot;&apos;&quot; + &quot;,&quot; +&#xd;
						&quot;&apos;value&apos;:&apos;&quot; + campos[c][&quot;val&quot;]+&quot;&apos;&quot; +&quot;&quot; +&#xd;
					&quot;}&quot;;&#xd;
					&#xd;
				}	&#xd;
			}&#xd;
			eval(&apos;arrResult.push({&apos;+str+&apos;});&apos;);&#xd;
		}&#xd;
		&#xd;
		return arrResult;&#xd;
	};	&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Converte o valor de um campo monetário para o formato aceito pelo Protheus&#xd;
 * @param valor String do valor informado&#xd;
 * @returns retorna o valor monetário como float&#xd;
 */&#xd;
function converteMoedaFloat(valor){&#xd;
	if(hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;&apos; || hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;1&apos; || hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;3&apos;){&#xd;
		valor = valor.replace(&quot;R$&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;2&apos;){&#xd;
		valor = valor.replace(&quot;US$&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;4&apos;){&#xd;
		valor = valor.replace(&quot;€&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;5&apos;){&#xd;
		valor = valor.replace(&quot;¥&quot;,&apos;&apos;);&#xd;
	}&#xd;
	valor = valor.replace(&quot; &quot;,&apos;&apos;);&#xd;
	&#xd;
	while(valor.indexOf(&quot;.&quot;) != -1){&#xd;
		valor = valor.replace(&apos;.&apos;,&apos;&apos;);&#xd;
	}&#xd;
	&#xd;
	valor = valor.replace(&quot;,&quot;,&quot;.&quot;);&#xd;
	valor = parseFloat(valor);&#xd;
	&#xd;
	return valor;&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeStateEntry</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeStateEntry(sequenceId) {&#xd;
	var pastaPai = 8898;&#xd;
	var verificarAnexo = new checkAnexo();&#xd;
	&#xd;
	populaCamposHiddenAnalytics(sequenceId);&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	if (sequenceId == GESTOR) {&#xd;
		&#xd;
		var nivelAtualAprovacao = hAPI.getCardValue(&quot;nivelAtualAprovacao&quot;);&#xd;
		var nivelMaximoAprovacao = hAPI.getCardValue(&quot;nivelMaximoAprovacao&quot;);&#xd;
		&#xd;
		if(nivelAtualAprovacao &lt; nivelMaximoAprovacao){&#xd;
			&#xd;
			nivelAtualAprovacao = parseInt(nivelAtualAprovacao) + 1;&#xd;
			hAPI.setCardValue(&quot;proximoAprovador&quot;, hAPI.getCardValue(&quot;idAprovGestor&quot; + nivelAtualAprovacao));&#xd;
			//hAPI.setCardValue(&quot;codigoAprovador&quot;, hAPI.getCardValue(&quot;idAprovGestor&quot; + nivelAtualAprovacao));&#xd;
			&#xd;
		} else {&#xd;
			&#xd;
			hAPI.setCardValue(&quot;proximoAprovador&quot;, &quot;&quot;);&#xd;
			&#xd;
		}&#xd;
		&#xd;
	}&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	if (sequenceId) {&#xd;
		log.info(&quot;beforeStateEntry -&gt; Proxima Tarefa =&gt;&gt;&gt;&gt; &quot; + sequenceId);&#xd;
		if (sequenceId == ATRIBUIR_RESPONSAVEL) {			&#xd;
			verificarAnexo.executar(&quot;Guias/Taxas/Boletos/Nota Fiscal&quot;);&#xd;
		} else if (sequenceId == 31) {&#xd;
			verificarAnexo.executar(&quot;Guias/Taxas/Boletos/Nota Fiscal&quot;);&#xd;
			publicaDocumento(pastaPai);&#xd;
		}else if(sequenceId == SOLUCAO_INC &amp;&amp; sequenceId != buscarAtividadeAtual()){&#xd;
			incrementaNrReprovacoes();&#xd;
		}			&#xd;
	} else {&#xd;
		log.info(&quot;Execu??o do beforeStateEntry sem preenchimento do sequenceId!&quot;);&#xd;
		return;&#xd;
	}&#xd;
	&#xd;
	if (sequenceId == ATRIBUIR_RESPONSAVEL) {&#xd;
		//var gestorResponsavel = getWFParametro(&quot;gestorResponsavel&quot;);&#xd;
		//if(gestorResponsavel == &quot;&quot;){&#xd;
			//throw &quot;Ausência de cadastro de Gestor para aprovação do Centro de Custo selecionado. Favor entrar em contato com a Central de Atendimento.&quot;;  &#xd;
		//}&#xd;
		definirAtividadeAutomatica();&#xd;
	}&#xd;
	&#xd;
	if (sequenceId == ATUALIZA_SLA_1) {&#xd;
		var users = new java.util.ArrayList();&#xd;
		users.add(hAPI.getCardValue(&quot;cdSolicitante&quot;)); 		&#xd;
		hAPI.setAutomaticDecision(CORRECAO, users,&#xd;
			&quot;Tarefa movimentada atualizando o tempo que está sendo empenhado na atividade.&quot;);&#xd;
	}&#xd;
	&#xd;
	if (sequenceId == ATUALIZA_SLA_2) {&#xd;
		var users = new java.util.ArrayList();&#xd;
		users.add(hAPI.getCardValue(&quot;cdSolicitante&quot;)); &#xd;
		hAPI.setAutomaticDecision(APROV_SOLIC, users,&#xd;
			&quot;Tarefa movimentada atualizando o tempo que está sendo empenhado na atividade.&quot;);&#xd;
		&#xd;
	}&#xd;
	&#xd;
}&#xd;
&#xd;
function publicaDocumento(pastaPai) {&#xd;
	var tipoSolicitacao = getTipoSolicitacao();&#xd;
	log.info(&quot;tipoSolicitacao: &quot; + tipoSolicitacao);&#xd;
	log.info(&quot;Prepara??o para a publica??o dos anexos!&quot;);&#xd;
	var objAnexar = new objAnexo(pastaPai);&#xd;
&#xd;
	objAnexar.setParametro(1, tipoSolicitacao);&#xd;
	objAnexar.setParametro(2);&#xd;
&#xd;
	log.info(&quot;TRATOU STRING&quot;);&#xd;
	&#xd;
	objAnexar.publicar();&#xd;
	log.info(&quot;PUBLICOU ARQUIVO&quot;);&#xd;
}&#xd;
&#xd;
function getTipoSolicitacao() {&#xd;
	var nomeTipo = &apos;&apos;;&#xd;
	nomeTipo = i18n.translate(&quot;label.pgtoTaxasBoletos&quot;);&#xd;
	return nomeTipo;&#xd;
}&#xd;
&#xd;
function definirAtividadeAutomatica() {&#xd;
	var users = new java.util.ArrayList();&#xd;
	users.add(&quot;System:auto&quot;);&#xd;
	hAPI.setAutomaticDecision(EXCLUSIVO_ATRIBUICAO, users,&#xd;
			&quot;Decisao tomada automaticamente pelo Fluig&quot;);&#xd;
&#xd;
	log.info(&quot;movimentando para a atividade automatica&quot;);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>util_calculoSLA_1-0-4</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var mesesExtensoObj = {&#xd;
    &quot;01&quot;  : &quot;Janeiro&quot;,&#xd;
    &quot;02&quot;  : &quot;Fevereiro&quot;,&#xd;
    &quot;03&quot;  : &quot;Março&quot;,&#xd;
    &quot;04&quot;  : &quot;Abril&quot;,&#xd;
    &quot;05&quot;  : &quot;Maio&quot;,&#xd;
    &quot;06&quot;  : &quot;Junho&quot;,&#xd;
    &quot;07&quot;  : &quot;Julho&quot;,&#xd;
    &quot;08&quot;  : &quot;Agosto&quot;,&#xd;
    &quot;09&quot;  : &quot;Setembro&quot;,&#xd;
    &quot;10&quot; : &quot;Outubro&quot;,&#xd;
    &quot;11&quot; : &quot;Novembro&quot;,&#xd;
    &quot;12&quot; : &quot;Dezembro&quot;&#xd;
}&#xd;
&#xd;
var mesesObj = {&#xd;
		&apos;Jan&apos; : 1, &#xd;
		&apos;Feb&apos; : 2, &#xd;
		&apos;Mar&apos; : 3, &#xd;
		&apos;Apr&apos; : 4, &#xd;
		&apos;May&apos; : 5, &#xd;
		&apos;Jun&apos; : 6, &#xd;
		&apos;Jul&apos; : 7, &#xd;
		&apos;Aug&apos; : 8, &#xd;
		&apos;Sep&apos; : 9, &#xd;
		&apos;Oct&apos; : 10, &#xd;
		&apos;Nov&apos; : 11, &#xd;
		&apos;Dec&apos; : 12&#xd;
	    &#xd;
	}&#xd;
&#xd;
var mesesIngles = {&#xd;
		0 : &quot;January&quot;, &#xd;
		1 : &quot;February&quot;, &#xd;
		2 : &quot;March&quot;, &#xd;
		3 : &quot;April&quot;, &#xd;
		4 : &quot;May&quot;, &#xd;
		5 : &quot;June&quot;, &#xd;
		6 : &quot;July&quot;, &#xd;
		7 : &quot;August&quot;, &#xd;
		8 : &quot;September&quot;, &#xd;
		9 : &quot;October&quot;, &#xd;
		10 : &quot;November&quot;, &#xd;
		11 : &quot;December&quot;&#xd;
	    &#xd;
	}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * @param dia&#xd;
 * @param mes&#xd;
 * @param ano&#xd;
 * @param hora&#xd;
 * @param minuto&#xd;
 * @returns Hora no formato dd/mm/aaaa hh:mm&#xd;
 */&#xd;
function formatarDataAnalytics(dia, mes, ano, hora, minuto,segundos){&#xd;
	if((dia+&quot;&quot;).length == 1)&#xd;
		dia = &quot;0&quot;+dia;	&#xd;
	if((mes+&quot;&quot;).length == 1)&#xd;
		mes = &quot;0&quot;+mes;&#xd;
	if((hora+&quot;&quot;).length == 1)&#xd;
		hora = &quot;0&quot;+hora;&#xd;
	if((minuto+&quot;&quot;).length == 1)&#xd;
		minuto = &quot;0&quot;+minuto;&#xd;
	if((segundos+&quot;&quot;).length == 1)&#xd;
		segundos = &quot;0&quot;+segundos;&#xd;
	return dia+&quot;/&quot;+mes+&quot;/&quot;+ano+&quot; &quot;+hora+&quot;:&quot;+minuto+&quot;:&quot;+segundos;&#xd;
}&#xd;
&#xd;
&#xd;
function buscaDataFormatada(campoData, campoHora){&#xd;
	var dataInicio = hAPI.getCardValue(campoData);&#xd;
	if (dataInicio == null) {&#xd;
		dataInicio=&quot;&quot;;&#xd;
	}&#xd;
	var dataFormatada = &quot; &quot;;&#xd;
	log.info(&quot;=====util_calculo_sla - buscaDataFormatada campoData |&quot;+campoData+&quot;|&quot;);&#xd;
	log.info(&quot;=====util_calculo_sla - buscaDataFormatada campoHora |&quot;+campoHora+&quot;|&quot;);&#xd;
	log.info(&quot;=====util_calculo_sla - buscaDataFormatada dataInicio |&quot;+dataInicio+&quot;|&quot;+hAPI.getCardValue(campoHora));&#xd;
	if(dataInicio == &quot;&quot; || dataInicio == null){&#xd;
		log.info(&quot;=====util_calculo_sla - buscaDataFormatada data vazia&quot;);&#xd;
		var dataAtual = new Date();&#xd;
		dataFormatada = formatarDataAnalytics(dataAtual.getDate(), (dataAtual.getMonth()+1), dataAtual.getFullYear(), dataAtual.getHours(), dataAtual.getMinutes(), dataAtual.getSeconds());&#xd;
	}else{&#xd;
		log.info(&quot;=====util_calculo_sla - buscaDataFormatada data preenchida&quot;);&#xd;
		dataFormatada = hAPI.getCardValue(campoData)+&quot; &quot;+hAPI.getCardValue(campoHora);&#xd;
	}&#xd;
&#xd;
	return dataFormatada;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
function converteDateParaString(dataObj){&#xd;
	var dataFormatada = formatarDataAnalytics(dataObj.getDate(), (dataObj.getMonth()+1), dataObj.getFullYear(), dataObj.getHours(), dataObj.getMinutes(), dataObj.getSeconds());&#xd;
	return dataFormatada;&#xd;
}&#xd;
&#xd;
function montaTimeStamp(data, horario, tipoRetorno){&#xd;
	&#xd;
	var dia;&#xd;
	var mes;&#xd;
	var ano;&#xd;
	&#xd;
	dia = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[0];&#xd;
	&#xd;
	mes = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[1]+&quot;&quot;;&#xd;
	mes = parseInt(mes, 10);&#xd;
	mes = mes;&#xd;
	&#xd;
	ano = data.split(&quot; &quot;)[0].split(&quot;/&quot;)[2];&#xd;
	&#xd;
	var dataRetorno&#xd;
	if(tipoRetorno == &quot;string&quot;){&#xd;
		var hora = horario.split(&quot;:&quot;)[0];&#xd;
		var minuto = horario.split(&quot;:&quot;)[1];&#xd;
		var segundos = horario.split(&quot;:&quot;)[2];&#xd;
		dataRetorno = formatarDataAnalytics(dia, mes, ano, hora, minuto, segundos);&#xd;
	}else{&#xd;
		dataRetorno = new Date(mesesIngles[parseInt(mes)-1]+&quot; &quot;+dia+&quot;, &quot;+ano+&quot; &quot;+horario);&#xd;
		//dataRetorno.setSeconds(0);&#xd;
		//dataRetorno.setMilliseconds(0);&#xd;
	}&#xd;
	&#xd;
	return dataRetorno;&#xd;
	&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna o dataset com os valores do pré cadastro de prazos de SLA&#xd;
 * &#xd;
 * &#xd;
 */&#xd;
function buscaDatasetPrazosSLA(){&#xd;
	&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;metadata#active&quot;, &quot;true&quot;, &quot;true&quot;, ConstraintType.MUST);&#xd;
	var dataset = DatasetFactory.getDataset(&quot;ds_prazo_sla_form&quot;,null,new Array(c1),null);&#xd;
	&#xd;
	&#xd;
	return dataset;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorna o dataset com os valores do pré cadastro de um SLA especifico&#xd;
 * &#xd;
 * &#xd;
 */&#xd;
function buscaDatasetPrazosSLAEspecifico(codigo_sla){&#xd;
	&#xd;
	var sla = {&#xd;
			codigo_sla : codigo_sla,&#xd;
			prazo_sla : &quot;&quot;,&#xd;
			medida_prazo : &quot;&quot;&#xd;
	};&#xd;
	&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;metadata#active&quot;, &quot;true&quot;, &quot;true&quot;, ConstraintType.MUST);&#xd;
	var c2 = DatasetFactory.createConstraint(&quot;codigo_sla&quot;, codigo_sla, codigo_sla, ConstraintType.MUST);&#xd;
	var prazosSLA = DatasetFactory.getDataset(&quot;ds_prazo_sla_form&quot;,null,new Array(c1,c2),null);&#xd;
	&#xd;
	if(prazosSLA.rowsCount &gt; 0){&#xd;
		sla = {&#xd;
				codigo_sla : codigo_sla,&#xd;
				prazo_sla : prazosSLA.getValue(0,&quot;prazo_sla&quot;),&#xd;
				medida_prazo : prazosSLA.getValue(0,&quot;medida_prazo&quot;)&#xd;
		};&#xd;
	}&#xd;
	&#xd;
	&#xd;
	return sla;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Retorno o objeto com os dados dos sla especifico&#xd;
 * &#xd;
 * @param codigoSLA código do sla especifico&#xd;
 * @param prazosSLA dataset com todos os dados&#xd;
 * @returns obejto sla&#xd;
 */&#xd;
&#xd;
function buscaSLA(codigoSLA, prazosSLA){&#xd;
	var sla = null;&#xd;
	for (var i = 0; i &lt; prazosSLA.rowsCount; i++) {&#xd;
		if(prazosSLA.getValue(i,&quot;codigo_sla&quot;) == codigoSLA){&#xd;
			&#xd;
			sla = {&#xd;
					codigo_sla : codigoSLA,&#xd;
					prazo_sla : prazosSLA.getValue(i,&quot;prazo_sla&quot;),&#xd;
					medida_prazo : prazosSLA.getValue(i,&quot;medida_prazo&quot;)&#xd;
			};&#xd;
			break;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	return sla;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Metodo que lista as atividades que estão atrasadas em um processo&#xd;
 * &#xd;
 * @param tempoGasto&#xd;
 * @param codigoSLA&#xd;
 * @returns {String}&#xd;
 */&#xd;
&#xd;
function listaAtividadesAtrasadas(tempoGasto, codigoSLA){&#xd;
	var atividadeAtrasada = false;&#xd;
	var currentState = parseInt(getValue(&quot;WKNumState&quot;));&#xd;
	&#xd;
	var atividadesAtrasadas = hAPI.getCardValue(&quot;atividadesAtrasadas&quot;); &#xd;
	var atividadesAtrasadasArray = atividadesAtrasadas.split(&quot;,&quot;);&#xd;
&#xd;
	if(tempoGasto &gt; 3){&#xd;
		atividadeAtrasada = true;&#xd;
		&#xd;
		if(atividadesAtrasadas != &quot;&quot;){&#xd;
			var atividadeAtrasadaCadastrada = false;&#xd;
			&#xd;
			for (var i = 0; i &lt; atividadesAtrasadasArray.length; i++) {&#xd;
				if(atividadesAtrasadasArray[i] == currentState){&#xd;
					atividadeAtrasadaCadastrada = true;&#xd;
					break;&#xd;
				}&#xd;
			}&#xd;
			&#xd;
			if(atividadeAtrasadaCadastrada == false){&#xd;
				atividadesAtrasadas = atividadesAtrasadas + &quot;,&quot;+currentState;&#xd;
			}&#xd;
		}else{&#xd;
			atividadesAtrasadas = currentState;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	return atividadesAtrasadas;&#xd;
	&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Retorna o prazo do SLA em segundos &#xd;
 * &#xd;
 * &#xd;
 * @param sla objeto sla&#xd;
 * @returns prazo em minutos&#xd;
 */&#xd;
function calculaPrazoSegundos(sla, expediente){&#xd;
	&#xd;
	&#xd;
	var	 prazo = 0;&#xd;
	var prazoSLA = sla.prazo_sla;&#xd;
	&#xd;
	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
		prazo = prazoSLA *60;&#xd;
	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
		prazo = prazoSLA * 60 * 60;&#xd;
	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
		var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
		var c2 = DatasetFactory.createConstraint(&quot;businessPeriodPK.weekDay&quot;, &quot;2&quot;, &quot;2&quot;, ConstraintType.MUST);&#xd;
		var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
		&#xd;
		var prazoDia = (parseInt(dataset_expediente.getValue(0,&quot;finalHour&quot;)) - parseInt(dataset_expediente.getValue(0,&quot;initialHour&quot;)));&#xd;
		prazoDia = prazoDia + (parseInt(dataset_expediente.getValue(1,&quot;finalHour&quot;)) - parseInt(dataset_expediente.getValue(1,&quot;initialHour&quot;)));&#xd;
		&#xd;
		prazo = prazoSLA * prazoDia;&#xd;
	}&#xd;
		&#xd;
	return prazo;&#xd;
		&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Calcula em segundos o tempo gasto da atividade, do prazo informado até a data atual ou até o prazo informado&#xd;
 * &#xd;
 * @param dataInicialCampo&#xd;
 * @param expediente&#xd;
 * @param dataPrazoFinal&#xd;
 * @returns tempo gasto&#xd;
 *  &#xd;
 */&#xd;
function calculaTempoGasto(dataInicialCampo ,expediente, dataPrazoFinal){&#xd;
	&#xd;
	//busca dataset de expediente e feriados&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
	var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
	var dataset_feriados = DatasetFactory.getDataset(&quot;globalCalendar&quot;, null, null, null);&#xd;
	&#xd;
	//instancia data atual&#xd;
	var dataAtual;&#xd;
	if(dataPrazoFinal == undefined || dataPrazoFinal == null || dataPrazoFinal == &quot;&quot;){&#xd;
		dataAtual = new Date();&#xd;
		dataAtual.setSeconds(0);&#xd;
		dataAtual.setMilliseconds(0);&#xd;
	}else{&#xd;
		&#xd;
		dataAtual = montaTimeStamp(dataPrazoFinal.split(&quot; &quot;)[0], dataPrazoFinal.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	}&#xd;
	&#xd;
&#xd;
	if(dataInicialCampo.split(&quot; &quot;)[0].indexOf(&quot;-&quot;) &gt; -1){&#xd;
		dataInicialCampo.replace(&quot;-&quot;,&quot;/&quot;);&#xd;
	}&#xd;
	&#xd;
	var dataInicial = montaTimeStamp(dataInicialCampo.split(&quot; &quot;)[0], dataInicialCampo.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	var dataInicialOriginal = montaTimeStamp(dataInicialCampo.split(&quot; &quot;)[0], dataInicialCampo.split(&quot; &quot;)[1], &quot;data&quot;);&#xd;
	&#xd;
	var tentativas = 0;&#xd;
	var tempoGasto = 0;&#xd;
	&#xd;
	&#xd;
	&#xd;
	while ((dataAtual.getTime() != dataInicial.getTime()) &amp;&amp; tentativas &lt; 300){&#xd;
		tentativas = tentativas + 1;&#xd;
		&#xd;
		//validando dias uteis&#xd;
		var isWorkingDay = true;&#xd;
		var sabado_util = false;&#xd;
		var domingo_util = false;&#xd;
		var feriado = false;&#xd;
		&#xd;
		for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
			if (parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 7) {&#xd;
				sabado_util = true;&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		if (dataInicial.getDay() == 6 &amp;&amp; !(sabado_util)) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		for (var d = 0; d &lt; dataset_expediente.rowsCount; d++) {&#xd;
			if (parseInt(dataset_expediente.getValue(d,&quot;businessPeriodPK.weekDay&quot;)) == 1) {&#xd;
				domingo_util = true;&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		if (dataInicial.getDay() == 0 &amp;&amp; !(domingo_util)) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		for (var f = 0; f &lt; dataset_feriados.rowsCount; f++) {&#xd;
			if (parseInt(dataset_feriados.getValue(f,&quot;holidayYear&quot;)) == 0 || dataInicial.getFullYear() == parseInt(dataset_feriados.getValue(f,&quot;holidayYear&quot;))) {&#xd;
				if ((dataInicial.getMonth() + 1) == parseInt(dataset_feriados.getValue(f,&quot;holidayMonth&quot;))) {&#xd;
					if (dataInicial.getDate() == parseInt(dataset_feriados.getValue(f,&quot;holidayDay&quot;))) {&#xd;
						feriado = true;&#xd;
						break;&#xd;
					}&#xd;
				}&#xd;
			}&#xd;
		}&#xd;
		&#xd;
		if (feriado) {&#xd;
			isWorkingDay = false;&#xd;
		}&#xd;
		&#xd;
		if (!isWorkingDay) {&#xd;
			continue;&#xd;
		}&#xd;
		&#xd;
		if((dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate() ||&#xd;
				&#xd;
				dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() &lt; dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate() ||&#xd;
				&#xd;
				dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate())||&#xd;
				&#xd;
				(dataAtual.getFullYear() &gt; dataInicial.getFullYear() &amp;&amp;&#xd;
				dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() &lt; dataInicial.getDate()&#xd;
				&#xd;
				)&#xd;
			){&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]));&#xd;
				//setar hora inicial proximo dia&#xd;
		}else if((dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &gt; dataInicial.getDate()	) ||&#xd;
			&#xd;
			(dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() == dataInicial.getDate())||&#xd;
			&#xd;
			(dataAtual.getMonth() &gt; dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &lt; dataInicial.getDate())&#xd;
		){&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]));&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
			dataAtual.getDate() &gt; dataInicial.getDate()	)&#xd;
		{&#xd;
				var horasCalculadas = retornaHorasUteisDia(dataInicialOriginal, dataInicial, dataset_expediente);&#xd;
				tempoGasto = tempoGasto + horasCalculadas;&#xd;
				var periodoInicial = buscaHoraInicial(dataInicial, dataset_expediente);&#xd;
				dataInicial.setDate( dataInicial.getDate() +1 );&#xd;
				dataInicial.setHours(parseInt(periodoInicial.split(&quot;:&quot;)[0]+&quot;&quot;));&#xd;
				dataInicial.setMinutes(parseInt(periodoInicial.split(&quot;:&quot;)[1]+&quot;&quot;));&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() &gt; dataInicial.getHours())&#xd;
		{&#xd;
			var horasCalculadas =  calculaHoraDoPeriodo(dataInicial, dataAtual, dataset_expediente, &quot;hora&quot;);&#xd;
			tempoGasto = tempoGasto + horasCalculadas;//horasCalculadas;&#xd;
			dataInicial.setHours( dataInicial.getHours() +1 );&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() &lt; dataInicial.getHours())&#xd;
		{&#xd;
//			var horasCalculadas =  calculaHoraDoPeriodo(dataInicial, dataset_expediente, &quot;hora&quot;);&#xd;
//			segundos = segundos - horasCalculadas;//horasCalculadas;&#xd;
			dataInicial.setHours( dataInicial.getHours() -1 );&#xd;
		}else if(dataAtual.getMonth() == dataInicial.getMonth() &amp;&amp;&#xd;
				dataAtual.getDate() == dataInicial.getDate() &amp;&amp;&#xd;
				dataAtual.getHours() == dataInicial.getHours() &amp;&amp;&#xd;
				dataAtual.getMinutes() &gt; dataInicial.getMinutes())&#xd;
		{&#xd;
			var horasCalculadas =  calculaMinutosDoPeriodo(dataInicial, dataset_expediente, &quot;minuto&quot;);&#xd;
			tempoGasto = tempoGasto + horasCalculadas;&#xd;
			dataInicial.setMinutes( dataInicial.getMinutes() +1 );&#xd;
		}&#xd;
		&#xd;
			&#xd;
			&#xd;
	}&#xd;
	&#xd;
	&#xd;
	return tempoGasto;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna a quantidade de horas uteis em um dia&#xd;
 * &#xd;
 * @param dataInicialOriginal &#xd;
 * @param data&#xd;
 * @param dataset_expediente&#xd;
 * @returns {Number}&#xd;
 */&#xd;
function retornaHorasUteisDia(dataInicialOriginal, data, dataset_expediente){&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	&#xd;
	if(data.getDay() == dataInicialOriginal.getDay() &amp;&amp; &#xd;
			data.getMonth() == dataInicialOriginal.getMonth() &amp;&amp;&#xd;
			data.getFullYear() == dataInicialOriginal.getFullYear() ){&#xd;
		&#xd;
		var horaPrazo = (dataInicialOriginal.getMinutes() * 60) + (dataInicialOriginal.getHours() * 3600);&#xd;
		horaPrazo = parseInt(horaPrazo+&quot;&quot;);&#xd;
		&#xd;
		&#xd;
		//:::::::1::::::   :::::::::::::::::::::2:::::::::::::::::::	:::::::3::::::	   ::::::::::::::::::::4:::::::::::::::::::	:::::::5::::::&#xd;
		//			       ::horaInicio1::::::::::::::::::horaFim1::                       ::horaInicio2:::::::::::::::::horaFim2::&#xd;
		&#xd;
		if(horaPrazo &lt; horaInicio1){&#xd;
			&#xd;
			//////////1&#xd;
			segundos = segundos + (horaFim1 - horaInicio1);&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
				horaPrazo &lt;= horaFim1 ){&#xd;
				&#xd;
			//////////2&#xd;
			segundos = segundos + (horaFim1 - horaPrazo);&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt; horaFim1 &amp;&amp; &#xd;
				horaPrazo &lt; horaInicio2 ){&#xd;
			&#xd;
			//////////3&#xd;
			segundos = segundos + (horaFim2 - horaInicio2);&#xd;
			&#xd;
		}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
				horaPrazo &lt;= horaFim2 ){&#xd;
			&#xd;
			//////////5&#xd;
			segundos = segundos + (horaFim2 - horaPrazo);&#xd;
			&#xd;
		}&#xd;
		&#xd;
	}else{&#xd;
		segundos = segundos + (horaFim1 - horaInicio1);&#xd;
		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
	}&#xd;
	&#xd;
	&#xd;
	log.info(&quot;=====================retornaHorasUteisDia: &quot; + segundos);&#xd;
	&#xd;
	return segundos;&#xd;
	&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna (em segundos) as horas uteis em um período&#xd;
 * &#xd;
 * @param data - data inicial para calculo&#xd;
 * @param dataset_expediente&#xd;
 * @returns tempo gasto em segundos &#xd;
 */&#xd;
function calculaHoraDoPeriodo(data, dataFinal, dataset_expediente, tipoCalculo){&#xd;
	&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	var multiplicador = 0;&#xd;
	var multiplicadorPrazo = 0;&#xd;
	&#xd;
	if(tipoCalculo == &quot;hora&quot;){&#xd;
		multiplicador = 3600;&#xd;
		multiplicadorPrazo = 3600;&#xd;
	}else{&#xd;
		multiplicador = 60;&#xd;
		multiplicadorPrazo = 1;&#xd;
	}	&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {		&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	var horaPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600);&#xd;
	horaPrazo = parseInt(horaPrazo+&quot;&quot;);	&#xd;
&#xd;
	var horaFimPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600) + 3600;&#xd;
	var horaFimPrazoOriginal = (dataFinal.getMinutes() * 60) + (dataFinal.getHours() * 3600);&#xd;
	horaFimPrazo = parseInt(horaFimPrazo+&quot;&quot;);&#xd;
	horaFimPrazoOriginal = parseInt(horaFimPrazoOriginal+&quot;&quot;);&#xd;
	&#xd;
	//         :::::::1::::::	:::::::2::::::	:::::::3::::::	:::::::4::::::	:::::::5::::::	:::::::6::::::	:::::::7::::::&#xd;
	//            ::horaInicio1::::::::::::::::::horaFim1::                        ::horaInicio2:::::::::::::::::horaFim2::&#xd;
	&#xd;
	if(horaPrazo &lt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio1){&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim1 ){&#xd;
		&#xd;
		//////////1&#xd;
		segundos = horaFimPrazo - horaInicio1;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim1 ){&#xd;
			&#xd;
		//////////2&#xd;
		//segundos = multiplicador;&#xd;
		if ((horaFimPrazoOriginal - horaPrazo) &gt; multiplicador) {&#xd;
			segundos = multiplicador;&#xd;
		} else {&#xd;
			segundos = horaFimPrazoOriginal - horaPrazo;&#xd;
		}&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaFim1 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaFim1 &amp;&amp; &#xd;
			horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio2){&#xd;
&#xd;
		//////////3&#xd;
		segundos = horaFim1 - horaPrazo;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaFim1 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaInicio2 ){&#xd;
		&#xd;
		//////////4&#xd;
		&#xd;
	}else if(horaPrazo &lt; horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim2 &amp;&amp;&#xd;
			horaPrazo &gt;= horaFim1){&#xd;
		&#xd;
		//////////5&#xd;
		segundos = horaFimPrazo - horaInicio2;&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
			horaFimPrazo &lt;= horaFim2 ){		&#xd;
		//////////6&#xd;
		//segundos = multiplicador;&#xd;
		if ((horaFimPrazoOriginal - horaPrazo) &gt; multiplicador) {&#xd;
			segundos = multiplicador;&#xd;
		} else {&#xd;
			segundos = horaFimPrazoOriginal - horaPrazo;&#xd;
		}&#xd;
		&#xd;
	}else if(horaPrazo &gt; horaInicio2 &amp;&amp; &#xd;
			horaPrazo &lt; horaFim2 &amp;&amp; &#xd;
			horaFimPrazo &gt; horaFim2){&#xd;
		&#xd;
		//////////7&#xd;
		segundos = horaFim2 - horaPrazo;&#xd;
		&#xd;
	}&#xd;
&#xd;
	return segundos;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna (em segundos) os minutos uteis em um período&#xd;
 * &#xd;
 * @param data data inicial para calculo&#xd;
 * @param dataset_expediente&#xd;
 * @returns tempo gasto segundos&#xd;
 */&#xd;
function calculaMinutosDoPeriodo(data, dataset_expediente, tipoCalculo){&#xd;
	&#xd;
	var segundos = 0;&#xd;
	&#xd;
	var horaInicio1 = 0;&#xd;
	var horaFim1 = 0;&#xd;
	var horaInicio2 = 0;&#xd;
	var horaFim2 = 0;&#xd;
	&#xd;
	var multiplicador = 0;&#xd;
	var multiplicadorPrazo = 0;&#xd;
	&#xd;
	if(tipoCalculo == &quot;hora&quot;){&#xd;
		multiplicador = 3600;&#xd;
		multiplicadorPrazo = 3600;&#xd;
	}else{&#xd;
		multiplicador = 60;&#xd;
		multiplicadorPrazo = 1;&#xd;
	}	&#xd;
	&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		&#xd;
		if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
			&#xd;
			horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		&#xd;
		}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == data.getDay()+1  &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
			horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
			horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	&#xd;
	&#xd;
	var horaPrazo = (data.getMinutes() * 60) + (data.getHours() * 3600);&#xd;
	horaPrazo = parseInt(horaPrazo+&quot;&quot;);&#xd;
	&#xd;
	//:::::::1::::::   :::::::::::::::::::::2:::::::::::::::::::	:::::::3::::::	   ::::::::::::::::::::4:::::::::::::::::::	:::::::5::::::&#xd;
	//			       ::horaInicio1::::::::::::::::::horaFim1::                       ::horaInicio2:::::::::::::::::horaFim2::&#xd;
	&#xd;
	if(horaPrazo &lt; horaInicio1){&#xd;
		&#xd;
		//////////1&#xd;
//		segundos = segundos + (horaFim1 - horaInicio1);&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio1 &amp;&amp; &#xd;
			horaPrazo &lt;= horaFim1 ){&#xd;
			&#xd;
		//////////2&#xd;
		segundos = 60;&#xd;
//		segundos = segundos + (horaFim1 - horaPrazo);&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt; horaFim1 &amp;&amp; &#xd;
			horaPrazo &lt; horaInicio2 ){&#xd;
		&#xd;
		//////////3&#xd;
//		segundos = segundos + (horaFim2 - horaInicio2);&#xd;
		&#xd;
	}else if(horaPrazo &gt;= horaInicio2 &amp;&amp; &#xd;
			horaPrazo &lt;= horaFim2 ){&#xd;
		&#xd;
		//////////5&#xd;
		segundos = 60;&#xd;
//		segundos = segundos + (horaFim2 - horaPrazo);&#xd;
		&#xd;
	}&#xd;
	log.info(&quot;=====================calculaMinutosDoPeriodo: &quot; + segundos);&#xd;
	&#xd;
	return segundos;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * retira os 0 para não dar problema no parseInt parseInt(&quot;09&quot;) / parseInt(&quot;9&quot;)&#xd;
 * &#xd;
 * @param valor para retirar os zeros&#xd;
 * @returns data sem zero&#xd;
 */&#xd;
function removeZeroEsquerdaData(valor){&#xd;
	if((valor+&quot;&quot;).indexOf(&quot;0&quot;) == 0){&#xd;
		valor = (valor+&quot;&quot;).substring(1,2);&#xd;
	}&#xd;
	&#xd;
	return valor;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * @returns Nome da atividade&#xd;
 */&#xd;
function buscaNomeAtividade(){&#xd;
	&#xd;
//	log.info(&quot;:::::::::::buscaNomeAtividade &quot;);&#xd;
	&#xd;
	var nomeAtividade = &quot;&quot;;&#xd;
	&#xd;
	var processo = getValue(&quot;WKDef&quot;);&#xd;
	var versao = getValue(&quot;WKVersDef&quot;);&#xd;
	var atividade = getValue(&quot;WKNextState&quot;);&#xd;
	&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;processStatePK.processId&quot;, processo, processo, ConstraintType.MUST);&#xd;
	var c2 = DatasetFactory.createConstraint(&quot;processStatePK.version&quot;, versao , versao, ConstraintType.MUST);&#xd;
	var c3 = DatasetFactory.createConstraint(&quot;processStatePK.sequence&quot;, atividade , atividade, ConstraintType.MUST);&#xd;
	var dataset_atividades = DatasetFactory.getDataset(&quot;processState&quot;, null, new Array(c1,c2,c3), null);&#xd;
	&#xd;
	&#xd;
	if(dataset_atividades != null &amp;&amp; dataset_atividades.rowsCount &gt; 0){&#xd;
		nomeAtividade = dataset_atividades.getValue(0,&quot;stateDescription&quot;);&#xd;
	}&#xd;
	&#xd;
	return nomeAtividade;&#xd;
		&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * Retorna o status da solicitação se ela esta no prazo ou atrasado&#xd;
 * &#xd;
 * @param tempoGasto  - tempo gasto em segundos pela atividade&#xd;
 * @param prazoSLAMinutos - prazo da atividade tambem em segundos&#xd;
 * @returns status (No Prazo / Atrasada)&#xd;
 */&#xd;
function validaSituacao(tempoGasto, prazoSLAMinutos){&#xd;
	&#xd;
	var situacao = &quot;&quot;;&#xd;
	&#xd;
	if(parseInt(tempoGasto) &gt; parseInt(prazoSLAMinutos)){&#xd;
		situacao = &quot;Atrasada&quot;;&#xd;
	}else{&#xd;
		situacao = &quot;No Prazo&quot;;&#xd;
	}&#xd;
	&#xd;
	return situacao;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Retorna o mes por extenso para usar nos filtros&#xd;
 * &#xd;
 * @param data&#xd;
 * @returns mes por extenso&#xd;
 */&#xd;
function retornaMesExtenso(data){&#xd;
	var dataSplit;&#xd;
	var mesExtenso = &quot; &quot;;&#xd;
	if(data != null &amp;&amp; data != &quot;&quot;){&#xd;
		if(data.indexOf(&quot;-&quot;) != -1){&#xd;
			dataSplit = data.split(&quot;-&quot;);&#xd;
			mesExtenso = mesesExtensoObj[dataSplit[1]+&quot;&quot;]+&quot;/&quot;+dataSplit[0];&#xd;
		}else{&#xd;
			dataSplit = data.split(&quot;/&quot;);&#xd;
			mesExtenso = mesesExtensoObj[dataSplit[1]+&quot;&quot;]+&quot;/&quot;+dataSplit[2];&#xd;
		}&#xd;
	}&#xd;
	return mesExtenso;&#xd;
	&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Busca hora inicial do periodo conforme o expediente&#xd;
 * &#xd;
 * @param dataInicial - data a ser consultada&#xd;
 * @param dataset_expediente&#xd;
 * @returns hora inicio do periodo (8:00)&#xd;
 */&#xd;
function buscaHoraInicial(dataInicial, dataset_expediente){&#xd;
	var diaDaSemana = dataInicial.getDay();&#xd;
	var segundos = 0;&#xd;
	var periodoInicial;&#xd;
	var periodoInicialSplit;&#xd;
	var periodoInicialRetorno;&#xd;
	for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
		if (parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == diaDaSemana &amp;&amp; &#xd;
				parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1) {&#xd;
				segundos = dataset_expediente.getValue(s,&quot;initialHour&quot;);&#xd;
			break;&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	periodoInicial = parseInt(segundos) / 3600;&#xd;
	&#xd;
	if((periodoInicial+&quot;&quot;).indexOf(&quot;.&quot;) &gt; -1){&#xd;
		periodoInicialSplit = (periodoInicial+&quot;&quot;).split(&quot;.&quot;);&#xd;
		periodoInicialSplit[1] = (parseInt(periodoInicialSplit[1]) * 60) / 100;&#xd;
		periodoInicialRetorno = periodoInicialSplit[0]+&quot;:&quot;+periodoInicialSplit[1];&#xd;
	}else{&#xd;
		periodoInicialRetorno = periodoInicial+&quot;:0&quot;;&#xd;
	}&#xd;
	&#xd;
	return periodoInicialRetorno;&#xd;
}&#xd;
&#xd;
&#xd;
/**&#xd;
 * &#xd;
 * Converte o tempo gasto de segundos para o especificado no pre cadastro de sla (minutos/horas/dias)&#xd;
 * &#xd;
 * @param tempoGasto - tempo gasto em segundos na atividade&#xd;
 * @param sla - sla especifico do item&#xd;
 * @param dataset_expediente dataset de expediente&#xd;
 * @returns prazo na medida especifoca do sla&#xd;
 */&#xd;
function converteTempoGasto(tempoGasto, sla, expediente){&#xd;
	&#xd;
	var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
	var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1), null);&#xd;
	&#xd;
	var prazo = 0;&#xd;
	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
		prazo = tempoGasto / 60;&#xd;
	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
		prazo = tempoGasto / 3600;&#xd;
	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
		var horaInicio1 = 0;&#xd;
		var horaFim1 = 0;&#xd;
		var horaInicio2 = 0;&#xd;
		var horaFim2 = 0;&#xd;
		&#xd;
		for (var s = 0; s &lt; dataset_expediente.rowsCount; s++) {&#xd;
			&#xd;
			if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 2  &amp;&amp; &#xd;
					parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 1){&#xd;
				&#xd;
				horaInicio1 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
				horaFim1 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
			&#xd;
				break;&#xd;
			}else if(parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.weekDay&quot;)) == 2  &amp;&amp; &#xd;
					parseInt(dataset_expediente.getValue(s,&quot;businessPeriodPK.sequence&quot;)) == 2){&#xd;
				horaInicio2 = parseInt(dataset_expediente.getValue(s,&quot;initialHour&quot;));&#xd;
				horaFim2 = parseInt(dataset_expediente.getValue(s,&quot;finalHour&quot;));&#xd;
				break;&#xd;
			}&#xd;
		}&#xd;
		&#xd;
		var horasDia = parseInt(((horaFim2 - horaInicio2) + (horaFim1 - horaInicio1)) / 3600);&#xd;
		&#xd;
		&#xd;
		prazo = (tempoGasto / 3600) / horasDia;&#xd;
	}	&#xd;
	&#xd;
	return prazo;&#xd;
}&#xd;
&#xd;
&#xd;
function calculaPrazoConclusao(sla, expediente, atividadesDescartadas, primeirasAtividadesDescartadas, dataInicioParam, horaIncioParam, sequenceId){&#xd;
	&#xd;
	&#xd;
	var dataInicio = montaTimeStamp(dataInicioParam, horaIncioParam, &quot;data&quot;);&#xd;
	&#xd;
	var segundosPrazoDepoisMeiaNoite = (dataInicio.getMinutes() * 60) + (dataInicio.getHours() * 3600);&#xd;
	&#xd;
	var prazoMinutos = 0;&#xd;
	&#xd;
	if(sla.medida_prazo == &quot;minutos&quot;){&#xd;
		prazoMinutos = sla.prazo_sla;&#xd;
	}else if(sla.medida_prazo == &quot;horas&quot;){&#xd;
		prazoMinutos = sla.prazo_sla * 60;&#xd;
	}else if(sla.medida_prazo == &quot;dias&quot;){&#xd;
		&#xd;
		var c1 = DatasetFactory.createConstraint(&quot;businessPeriodPK.periodId&quot;, expediente, expediente, ConstraintType.MUST);&#xd;
		var c2 = DatasetFactory.createConstraint(&quot;businessPeriodPK.weekDay&quot;, &quot;2&quot;, &quot;2&quot;, ConstraintType.MUST);&#xd;
		var dataset_expediente = DatasetFactory.getDataset(&quot;businessPeriod&quot;, null, new Array(c1,c2), null);&#xd;
		&#xd;
		var minutosDia = parseInt(dataset_expediente.getValue(0,&quot;finalHour&quot;)+&quot;&quot;) - parseInt(dataset_expediente.getValue(0,&quot;initialHour&quot;)+&quot;&quot;); &#xd;
		minutosDia = minutosDia + (parseInt(dataset_expediente.getValue(1,&quot;finalHour&quot;)+&quot;&quot;) - parseInt(dataset_expediente.getValue(1,&quot;initialHour&quot;)+&quot;&quot;));&#xd;
		&#xd;
		minutosDia = minutosDia / 60;&#xd;
		&#xd;
		prazoMinutos = sla.prazo_sla * minutosDia;&#xd;
	}&#xd;
	&#xd;
	&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - atividadesDescartadas: &quot;+atividadesDescartadas);	&#xd;
	if(atividadesDescartadas != &quot;&quot;){&#xd;
		var dataset_data_tarefas = DatasetFactory.getDataset(&quot;sql_consulta_ultimo_movto_atividade&quot;, new Array(getValue(&quot;WKNumProces&quot;),atividadesDescartadas),null, null);&#xd;
		log.info(&quot;=====================calculaPrazoConclusao - sql_consulta_ultimo_movto_atividade: &quot;+dataset_data_tarefas.rowsCount);&#xd;
		&#xd;
		if(dataset_data_tarefas != null &amp;&amp; dataset_data_tarefas.rowsCount &gt; 0){&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - minutosDesconsiderados: &quot; + dataset_data_tarefas);&#xd;
			var minutosDesconsiderados = calculaHorasDesconsiderar(dataset_data_tarefas);&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - minutosDesconsiderados: &quot;+minutosDesconsiderados);&#xd;
			prazoMinutos = parseInt(prazoMinutos) + parseInt(minutosDesconsiderados);&#xd;
		}&#xd;
		&#xd;
	}&#xd;
	&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - primeirasAtividadesDescartadas: &quot;+primeirasAtividadesDescartadas);&#xd;
	if(primeirasAtividadesDescartadas != &quot;&quot;){&#xd;
		var primeirasAtividadesDescartadasArray;&#xd;
		if(primeirasAtividadesDescartadas.indexOf(&quot;,&quot;) != -1){&#xd;
			primeirasAtividadesDescartadasArray = primeirasAtividadesDescartadas.split(&quot;,&quot;);&#xd;
		}&#xd;
		else{&#xd;
			primeirasAtividadesDescartadasArray = [primeirasAtividadesDescartadas];&#xd;
		}&#xd;
		log.info(&quot;=====================calculaPrazoConclusao - primeirasAtividadesDescartadasArray: &quot;+primeirasAtividadesDescartadasArray.length);&#xd;
		&#xd;
		for (var i = 0; i &lt; primeirasAtividadesDescartadasArray.length; i++) {&#xd;
			var dataset_data_tarefas_sem_ultima = DatasetFactory.getDataset(&quot;sql_consulta_data_tarefas_ultima_descartada&quot;, new Array(getValue(&quot;WKNumProces&quot;),primeirasAtividadesDescartadasArray[i]),null, null);&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - dataset_data_tarefas_sem_ultima: &quot;+dataset_data_tarefas_sem_ultima.rowsCount);&#xd;
			&#xd;
			var minutosDesconsiderados = calculaHorasDesconsiderar(dataset_data_tarefas_sem_ultima);&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - minutosDesconsiderados: &quot;+minutosDesconsiderados);&#xd;
			prazoMinutos = parseInt(prazoMinutos) + parseInt(minutosDesconsiderados);&#xd;
		}&#xd;
		&#xd;
	}&#xd;
	&#xd;
	if(sla.medida_prazo == &quot;minutos&quot; &amp;&amp; sla.prazo_sla != prazoMinutos){		&#xd;
		hAPI.setCardValue(&apos;analyticsPrazoSLA&apos;, prazoMinutos);&#xd;
		&#xd;
	}else if(sla.medida_prazo == &quot;horas&quot; &amp;&amp; sla.prazo_sla != prazoMinutos){&#xd;
		var prazoHoras = prazoMinutos / 60;&#xd;
		hAPI.setCardValue(&apos;analyticsPrazoSLA&apos;, prazoHoras);&#xd;
	} &#xd;
	&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - dataInicio: &quot;+dataInicio);&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - segundosPrazoDepoisMeiaNoite: &quot;+segundosPrazoDepoisMeiaNoite);&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - prazoMinutos: &quot;+prazoMinutos);&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - expediente: &quot;+expediente);&#xd;
	var objDataRetorno = hAPI.calculateDeadLineTime(dataInicio, segundosPrazoDepoisMeiaNoite, prazoMinutos, expediente);&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - objDataRetorno[0]: &quot;+objDataRetorno[0]);&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - objDataRetorno[1]: &quot;+objDataRetorno[1]);&#xd;
	var dataArray = (objDataRetorno[0]+&quot;&quot;).split(&quot; &quot;);&#xd;
	var prazoSegundos = parseInt(objDataRetorno[1]+&quot;&quot;) / 3600;&#xd;
	&#xd;
	&#xd;
	&#xd;
//	&quot;Fri Aug 21 10:43:15 BRT 2015&quot;;	&#xd;
	&#xd;
	if((dataArray[2]+&quot;&quot;).indexOf(&quot;0&quot;) == 0){&#xd;
		dataArray[2] = (dataArray[2]+&quot;&quot;).replace(&quot;0&quot;,&quot;&quot;);&#xd;
	}&#xd;
	&#xd;
	var dia = parseInt(dataArray[2]+&quot;&quot;);&#xd;
	var mes = parseInt(mesesObj[dataArray[1]]+&quot;&quot;);&#xd;
	var ano = dataArray[5];&#xd;
	&#xd;
	var segundos = parseInt(objDataRetorno[0].getSeconds());&#xd;
	&#xd;
	var prazoOrigianl = parseInt(objDataRetorno[1]+&quot;&quot;);&#xd;
	var prazoSegundos = prazoOrigianl / 3600;&#xd;
	var horas = parseInt((prazoSegundos+&quot;&quot;).split(&quot;.&quot;)[0]);&#xd;
	&#xd;
	var minutos = prazoOrigianl - (horas * 3600);&#xd;
&#xd;
	&#xd;
	minutos = Math.ceil(minutos / 60);&#xd;
	&#xd;
	var dataPrazo = montaTimeStamp(dia+&quot;/&quot;+mes+&quot;/&quot;+ano, horas+&quot;:&quot;+minutos+&quot;:&quot;+segundos, &quot;data&quot;);&#xd;
	&#xd;
	return dataPrazo;&#xd;
	&#xd;
}&#xd;
&#xd;
function calculaHorasDesconsiderar(dataset){&#xd;
	&#xd;
var total = 0;&#xd;
	&#xd;
	var data1;&#xd;
	var data2;&#xd;
	var diferenca = 0; &#xd;
	var total = 0;&#xd;
	for (var i = 0; i &lt; dataset.rowsCount; i++) {&#xd;
			&#xd;
			var dataInicio = (dataset.getValue(i,&quot;DAT_INICIO&quot;)+&quot;&quot;).split(&quot;-&quot;);&#xd;
			var dataFim = (dataset.getValue(i,&quot;DAT_FIM&quot;)+&quot;&quot;).split(&quot;-&quot;);&#xd;
			var horarioInicio = (dataset.getValue(i,&quot;HRA_INICIO&quot;)+&quot;&quot;).split(&quot;:&quot;);&#xd;
			var horarioFim = (dataset.getValue(i,&quot;HRA_FIM&quot;)+&quot;&quot;).split(&quot;:&quot;);&#xd;
			&#xd;
			var dataForamatadaInicio = dataInicio[2]+&quot;/&quot;+dataInicio[1]+&quot;/&quot;+dataInicio[0]+&quot; &quot;+horarioInicio[0]+&quot;:&quot;+horarioInicio[1]+&quot;:&quot;+horarioInicio[2];&#xd;
			var dataForamatadaFim = dataFim[2]+&quot;/&quot;+dataFim[1]+&quot;/&quot;+dataFim[0]+&quot; &quot;+horarioFim[0]+&quot;:&quot;+horarioFim[1]+&quot;:&quot;+horarioFim[2];			&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - dataForamatadaInicio: &quot;+dataForamatadaInicio);&#xd;
			log.info(&quot;=====================calculaPrazoConclusao - dataForamatadaFim: &quot;+dataForamatadaFim);&#xd;
			totalSegundos = calculaTempoGasto(dataForamatadaInicio, &quot;Default&quot;, dataForamatadaFim);&#xd;
			&#xd;
			total = total + (parseInt(totalSegundos) /60);		&#xd;
	}&#xd;
	log.info(&quot;=====================calculaPrazoConclusao - total: &quot;+total); &#xd;
	return total;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>cardProtheus</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function insereTituloProtheus(){&#xd;
	//informa ao objeto de WS se o valor está sendo rateado para a geração correta do xml&#xd;
	var rateado = (hAPI.getCardValue(&quot;existeRateio&quot;) == &quot;true&quot;) ? true : false;&#xd;
	var objPreTitulo = new objWS(&apos;OncoclinicasCriacaoTitulos&apos;, &apos;WSINTIPG&apos;, rateado);&#xd;
	//Estrutura o xml com os dados obtidos&#xd;
	montaXMLNovo(objPreTitulo,&apos;1&apos;);&#xd;
	var retorno = objPreTitulo.executar();&#xd;
	return retorno;&#xd;
}&#xd;
function removeTiTuloProtheus(){&#xd;
	var rateado = (hAPI.getCardValue(&quot;existeRateio&quot;) == &quot;true&quot;) ? true : false;&#xd;
	var objPreTitulo = new objWS(&apos;OncoclinicasCriacaoTitulos&apos;, &apos;WSINTIPG&apos;, rateado);&#xd;
	//Estrutura o xml com os dados obtidos&#xd;
	montaXMLNovo(objPreTitulo,&apos;3&apos;);&#xd;
	var retorno = objPreTitulo.executar();&#xd;
	return retorno;		&#xd;
}&#xd;
&#xd;
function montaXMLNovo(objPreTitulo, operacao) {&#xd;
	var rateado = (hAPI.getCardValue(&quot;existeRateio&quot;) == &quot;true&quot;) ? true : false;&#xd;
	//Busca os valores do hmtl&#xd;
	var filiaProtheus = hAPI.getCardValue(&quot;filial_protheus&quot;);&#xd;
	var valorTotalTitulo = formataMoeda(hAPI.getCardValue(&quot;valorPgtoGuiaTaxaBoletos&quot;));&#xd;
	var centroDeCusto = hAPI.getCardValue(&quot;CTT_CUSTO&quot;);&#xd;
	var fornecedor = hAPI.getCardValue(&quot;A2_COD&quot;);&#xd;
	var tipo = hAPI.getCardValue(&quot;codTipoLancamento&quot;);&#xd;
	//Os prefixos dos títulos incluidos automaticamente devem ser iguais aos tipos, exceto nos casos de pagamento internacional&#xd;
	//que devem ser &quot;CAM&quot;.&#xd;
	var prefixo = tipo;&#xd;
	if(hAPI.getCardValue(&apos;compraExterior&apos;) == &apos;sim&apos;){&#xd;
		prefixo = &apos;CAM&apos;;&#xd;
	}&#xd;
	var loja = hAPI.getCardValue(&apos;lojaFornecedor&apos;);&#xd;
	var historia = removeAcentos(new java.lang.String(hAPI.getCardValue(&quot;historico&quot;)));&#xd;
	var dataEmissao = formataDataFormulario(new Date());&#xd;
	var dataVencimento = hAPI.getCardValue(&quot;dtDeVencPgtoGuiaTaxaBoletos&quot;);&#xd;
	var naturezaGeral = hAPI.getCardValue(&quot;zoomNatureza&quot;).split(&quot;-&quot;)[0].trim();&#xd;
	var codTributoGps = hAPI.getCardValue(&quot;codTributoGPS&quot;);&#xd;
	var cgcTrib = new java.lang.String(hAPI.getCardValue(&quot;cgcTributo&quot;)).replaceAll(&quot;[^0-9]&quot;,&quot;&quot;);&#xd;
	var vlrOutrasEntidades = formataMoeda(hAPI.getCardValue(&quot;vlrOutEntidades&quot;));&#xd;
	if (vlrOutrasEntidades == 0){&#xd;
		//Para valores iguais a 0 eles devem ser convertidos para String, caso contrário&#xd;
		//o JavaScript o reconhece como valor vazio e não permite a integração com o protheus&#xd;
		vlrOutrasEntidades = &apos;0&apos;;&#xd;
	}&#xd;
	var codRetencao = hAPI.getCardValue(&quot;zoomCodRetencao&quot;).split(&quot;-&quot;)[0].trim();&#xd;
	var dtApuracao = hAPI.getCardValue(&quot;dataApuracao&quot;);&#xd;
	var geraDirf = (hAPI.getCardValue(&quot;cbGeraDirf&quot;) == &quot;S&quot;) ? 1 : 2;&#xd;
	var tipoTributo = hAPI.getCardValue(&quot;tipoTributo&quot;);&#xd;
	var idFluig = getValue(&quot;WKNumProces&quot;);&#xd;
	var dtCriacao =  formataDataProtheus(new Date());&#xd;
	var hrCriacao = formataHoraProtheus(new Date());&#xd;
	var multnat =&apos;2&apos;;&#xd;
	var parcela =&apos;1&apos;; //1 = Gravação, Multnat sempre vai ser 1, parcela sempre vai ser 1&#xd;
	var tipoLancamento = hAPI.getCardValue(&apos;zoomTipolancamento&apos;);&#xd;
	var numeroDocumento = hAPI.getCardValue(&apos;numeroDocumento&apos;);&#xd;
	var dataPagamento = hAPI.getCardValue(&apos;dtDePgtoGuiaTaxaBoletos&apos;);&#xd;
	var moeda = validaMoeda(hAPI.getCardValue(&apos;sMoeda&apos;));&#xd;
	&#xd;
	//Operação 3 = Remover titulo do protheus&#xd;
	if(operacao === &apos;3&apos;){&#xd;
		if(numeroDocumento != &apos;&apos;){&#xd;
			objPreTitulo.setListaCabec(&apos;E2_NUM&apos;,numeroDocumento);&#xd;
		}else{&#xd;
			throw &apos;Impossível apagar o título no Protheus sem o número do documento.&apos;;&#xd;
		}&#xd;
	}else if(operacao !== &apos;1&apos;){//Operação 1 = Inserção de Título no Protheus&#xd;
		throw &apos;Erro ao inserir título no Protheus. Número da operação inválido.&apos;;&#xd;
	}&#xd;
	&#xd;
	//&quot;De/Para&quot; para traduzir os valores dos dados de tipo de tributo que serã incluidos no protheus&#xd;
	//O tipo de tributo de valor 6 no Protheus não existe tradução, provavelmente trata-se de um registro antigo que não é utilizado mais.&#xd;
	if(tipoTributo == &apos;ISS/IPTU/OUTROS&apos;){&#xd;
		tipoTributo = &apos;1&apos;;&#xd;
	} else if(tipoTributo == &apos;IPV&apos;){&#xd;
		tipoTributo = &apos;2&apos;;&#xd;
	} else if(tipoTributo == &apos;DRJ&apos;){&#xd;
		tipoTributo = &apos;3&apos;;&#xd;
	} else if(tipoTributo == &apos;FGT&apos;){&#xd;
		tipoTributo = &apos;4&apos;;&#xd;
	} else if(tipoTributo == &apos;GNR&apos;){&#xd;
		tipoTributo = &apos;5&apos;;&#xd;
	}&#xd;
	&#xd;
	if(tipoLancamento == &apos;GPS&apos;){&#xd;
&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CODTRIB&apos;,codTributoGps);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CGCTRIB&apos;,cgcTrib);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_COMPET&apos;,dtApuracao);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_ZPERIOD&apos;,dtApuracao);&#xd;
		&#xd;
	} else if(tipoLancamento == &apos;FGTS&apos;){&#xd;
&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CGCTRIB&apos;,cgcTrib);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_ZTPTRIB&apos;,tipoTributo);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_COMPET&apos;,dtApuracao);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_ZPERIOD&apos;,dtApuracao);&#xd;
		&#xd;
	} else if (tipoLancamento == &apos;DARF&apos;){&#xd;
&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CGCTRIB&apos;,cgcTrib);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CODRET&apos;,codRetencao);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_COMPET&apos;,dtApuracao);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_ZPERIOD&apos;,dtApuracao);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_DIRF&apos;,geraDirf);&#xd;
		&#xd;
	} else if (tipoLancamento == &apos;IPTU&apos;){&#xd;
&#xd;
		objPreTitulo.setListaCabec(&apos;E2_CGCTRIB&apos;,cgcTrib);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_ZTPTRIB&apos;,tipoTributo);&#xd;
		&#xd;
	}	&#xd;
	&#xd;
	//Cria os campos xml passando os valores&#xd;
	objPreTitulo.setListaCabec(&apos;E2_PREFIXO&apos;,prefixo);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_FILIAL&apos;,filiaProtheus);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_TIPO&apos;,tipo);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_NATUREZ&apos;,naturezaGeral);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_FORNECE&apos;,fornecedor);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_EMISSAO&apos;,dataEmissao);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_VALOR&apos;,valorTotalTitulo);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_ZVALENT&apos;,vlrOutrasEntidades);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_CCD&apos;,centroDeCusto);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_CCUSTO&apos;,centroDeCusto); // glpi-148704&#xd;
	objPreTitulo.setListaCabec(&apos;E2_LOJA&apos;,loja);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_HIST&apos;,historia);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_ZIDFLG&apos;,idFluig);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_ZDTINT&apos;,dtCriacao);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_ZHRINT&apos;,hrCriacao);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_PARCELA&apos;,parcela);&#xd;
	if(rateado){&#xd;
		var multnat = &apos;1&apos;;&#xd;
	} else {&#xd;
		var multnat = &apos;2&apos;;&#xd;
	}&#xd;
	objPreTitulo.setListaCabec(&apos;E2_MULTNAT&apos;,multnat);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_MOEDA&apos;,moeda.codigo);&#xd;
	objPreTitulo.setListaCabec(&apos;E2_TXMOEDA&apos;,moeda.taxa);&#xd;
	&#xd;
	//Verifica se o titulo foi pago após o vencimento, para preencher os campos Vencimento Original e Vencimento no Protheus&#xd;
	if(dataPagamento != &apos;&apos; &amp;&amp; dataPagamento != null &amp;&amp; dataPagamento != undefined){&#xd;
		objPreTitulo.setListaCabec(&apos;E2_VENCORI&apos;,dataVencimento);&#xd;
		objPreTitulo.setListaCabec(&apos;E2_VENCTO&apos;,dataPagamento);&#xd;
	} else {&#xd;
		objPreTitulo.setListaCabec(&apos;E2_VENCTO&apos;,dataVencimento);&#xd;
	}&#xd;
	objPreTitulo.setListaTipo(&apos;Titulo&apos;);&#xd;
	objPreTitulo.setListaOperacao(operacao);&#xd;
	&#xd;
	if(hAPI.getCardValue(&apos;existeRateio&apos;) == &apos;true&apos;){&#xd;
		//Busca os campos do pai filho do formulario que são correspondentes a despesas &#xd;
		var camposNatureza = [{&apos;tag&apos;:&apos;EV_PERC&apos;,&apos;valorTag&apos;:&apos;100&apos;}, //Como não há rateio por natureza, a porcentagem é fixa em 100%&#xd;
							  {&apos;tag&apos;:&apos;EV_NATUREZ&apos;,&apos;valorTag&apos;:naturezaGeral},&#xd;
							  {&apos;tag&apos;:&apos;EV_VALOR&apos;,&apos;valorTag&apos;:valorTotalTitulo}]&#xd;
		&#xd;
		var campos = new formularioUtils().buscaCamposPaiFilho([{&quot;ref&quot;:&quot;valorBeneficio&quot;},{&quot;ref&quot;:&quot;codCentroCustoBeneficio&quot;}]);&#xd;
		objPreTitulo.setListaItens(camposNatureza,campos);	&#xd;
	}&#xd;
	hAPI.setCardValue(&quot;dataemissaoPgtoGuiaTaxaBoletos&quot;, dataEmissao);&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
/**&#xd;
 * Transforma o objeto do tipo data para uma string no formato de data do protheus&#xd;
 * @param data Objeto do tipo data  &#xd;
 * @returns String com a data passada no formato aceito pelo protheus. Retorna Falso se ocorrer algum erro&#xd;
 */&#xd;
function formataDataProtheus(data){&#xd;
	try{&#xd;
		var ano =  data.getFullYear()&#xd;
		var mes = data.getMonth();&#xd;
		mes = parseInt(mes)+1; //Altera o fato do date considerar 0 como janeiro&#xd;
		mes = (mes &lt; 10) ? &quot;0&quot;+mes : mes;&#xd;
		var dia = (data.getDate() &lt; 10) ? &quot;0&quot;+data.getDate() :data.getDate();&#xd;
		var dateResult = ano+&quot;&quot;+mes+&quot;&quot;+dia;&#xd;
		return dateResult;&#xd;
	}catch(err){&#xd;
		return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Transforma o objeto do tipo data para uma string no formato de data formatado para ser exibido no formulário&#xd;
 * @param data Objeto do tipo data  &#xd;
 * @returns String com a data passada no formato dd/mm/aaaa. Retorna Falso se ocorrer algum erro&#xd;
 */&#xd;
function formataDataFormulario(data){&#xd;
	try{&#xd;
		var ano =  data.getFullYear()&#xd;
		var mes = data.getMonth();&#xd;
		mes = parseInt(mes)+1; //Altera o fato do date considerar 0 como janeiro&#xd;
		mes = (mes &lt; 10) ? &quot;0&quot;+mes : mes;&#xd;
		var dia = (data.getDate() &lt; 10) ? &quot;0&quot;+data.getDate() :data.getDate();&#xd;
		var dateResult = dia+&quot;/&quot;+mes+&quot;/&quot;+ano;&#xd;
		return dateResult;&#xd;
	}catch(err){&#xd;
		return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Transforma o objeto do tipo data para uma string no formato de hora do protheus&#xd;
 * @param data Objeto do tipo data  &#xd;
 * @returns String com a hora passada no formato aceito pelo protheus. Retorna Falso se ocorrer algum erro&#xd;
 */&#xd;
function formataHoraProtheus(data){&#xd;
	try{&#xd;
		var hora = data.getHours();&#xd;
		hora = (hora &lt; 10) ? &quot;0&quot;+hora : hora;&#xd;
		var minuto = data.getMinutes();&#xd;
		minuto = (minuto &lt; 10) ? &quot;0&quot;+minuto : minuto;&#xd;
		var segundos = data.getSeconds();&#xd;
		segundos = (segundos &lt; 10) ? &quot;0&quot;+segundos : segundos;&#xd;
		var horaTotal =  hora + &quot;:&quot; + minuto + &quot;:&quot; + segundos&#xd;
		return horaTotal;&#xd;
	} catch(err) {&#xd;
		return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Converte o valor de um campo monetário para o formato aceito pelo Protheus&#xd;
 * @param valor String do valor informado&#xd;
 * @returns retorna o valor monetário como float&#xd;
 */&#xd;
function formataMoeda(valor){&#xd;
	if(hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;&apos; || hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;1&apos; || hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;3&apos;){&#xd;
		valor = valor.replace(&quot;R$&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;2&apos;){&#xd;
		valor = valor.replace(&quot;US$&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;4&apos;){&#xd;
		valor = valor.replace(&quot;€&quot;,&apos;&apos;);&#xd;
	} else if (hAPI.getCardValue(&apos;sMoeda&apos;) == &apos;5&apos;){&#xd;
		valor = valor.replace(&quot;¥&quot;,&apos;&apos;);&#xd;
	}&#xd;
	valor = valor.replace(&quot; &quot;,&apos;&apos;);&#xd;
	&#xd;
	while(valor.indexOf(&quot;.&quot;) != -1){&#xd;
		valor = valor.replace(&apos;.&apos;,&apos;&apos;);&#xd;
	}&#xd;
	&#xd;
	valor = valor.replace(&quot;,&quot;,&quot;.&quot;);&#xd;
	valor = parseFloat(valor);&#xd;
	&#xd;
	return valor;&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Verifica se aconteceu algum erro na inserção do titulo&#xd;
 * @param retornoTitulo&#xd;
 * @returns Se existir erro retorna a mensagem de erro se não existir retorna Sucesso&#xd;
 */&#xd;
function verificaErro(retornoTitulo){&#xd;
	&#xd;
	var response = retornoTitulo.split(&quot;|&quot;);&#xd;
	&#xd;
	if(response[0] !=&quot;1&quot;){&#xd;
		return response[1];&#xd;
	}else{&#xd;
		return &quot;Sucesso&quot;&#xd;
	}&#xd;
&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Verifica se o codigo retenção informado deve gerar título no protheus. &#xd;
 * Os Codigos de Retenção listados a baixo não geram títulos no protheus.&#xd;
 * @returns {Boolean} True caso deva ser incluido o título e false caso não deva.&#xd;
 */&#xd;
function verificaRetencao(){&#xd;
	var codRetencao = hAPI.getCardValue(&quot;zoomCodRetencao&quot;);&#xd;
	var codTributoGps = hAPI.getCardValue(&quot;codTributoGPS&quot;);&#xd;
	var codNatureza = hAPI.getCardValue(&quot;zoomNatureza&quot;).split(&apos;-&apos;)[0].trim();&#xd;
	if(codRetencao != &quot;&quot; &amp;&amp; codRetencao != null &amp;&amp; codRetencao != undefined &amp;&amp; codNatureza != &apos;41111012&apos; &amp;&amp; codNatureza != &apos;41111011&apos;){&#xd;
		if(codRetencao == &apos;N/A&apos; &amp;&amp; codTributoGps == &quot;2631&quot;){&#xd;
			return false;&#xd;
		}&#xd;
		codRetencao = codRetencao.split(&quot;-&quot;)[0].trim();&#xd;
		if(codRetencao != &quot;0588&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;1708&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;2631&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;3208&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;3280&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;5952&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;5979&quot; &amp;&amp;&#xd;
		   codRetencao != &quot;5987&quot;){&#xd;
			return true;&#xd;
		}&#xd;
	} else {&#xd;
	   return false;&#xd;
	}&#xd;
}&#xd;
&#xd;
/**&#xd;
 * Recebe uma String como paramentro e a retorna sem os acentos&#xd;
 * @param string&#xd;
 * @returns&#xd;
 */&#xd;
function removeAcentos(string){&#xd;
	string = string.replaceAll(&apos;Á|À|Â|Ã|Ä&apos;,&apos;A&apos;);&#xd;
	string = string.replaceAll(&apos;É|È|Ê|Ë&apos;,&apos;E&apos;);&#xd;
	string = string.replaceAll(&apos;Í|Ì|Î|Ï&apos;,&apos;I&apos;);&#xd;
	string = string.replaceAll(&apos;Ó|Ò|Ô|Õ|Ö&apos;,&apos;O&apos;);&#xd;
	string = string.replaceAll(&apos;Ú|Ù|Û|Ü&apos;,&apos;U&apos;);&#xd;
	string = string.replaceAll(&apos;Ç&apos;,&apos;C&apos;);&#xd;
	string = string.replaceAll(&quot;[^a-zA-Z0-9]&quot;, &quot; &quot;); &#xd;
	return string&#xd;
}&#xd;
&#xd;
function validaMoeda(codigo){&#xd;
	var moeda = {};&#xd;
	if(codigo == &apos;&apos; || codigo == null || codigo == undefined || codigo == &apos;1&apos;){&#xd;
		moeda.codigo = &apos;1&apos;;&#xd;
		moeda.taxa = &apos;1&apos;;&#xd;
	} else {&#xd;
		var constraint_ds_moeda = DatasetFactory.createConstraint(&apos;CODIGO&apos;, codigo, codigo, ConstraintType.MUST);&#xd;
		var ds_moeda = DatasetFactory.getDataset(&apos;ds_moeda&apos;, null, [constraint_ds_moeda], null);&#xd;
		moeda.codigo = codigo;&#xd;
		moeda.taxa = ds_moeda.getValue(0, &quot;VALOR&quot;);&#xd;
	}&#xd;
	return moeda;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>defined</eventId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>var INICIO = 8;&#xd;
var ATRIBUIR_RESPONSAVEL = 43;&#xd;
var EXCLUSIVO_ATRIBUICAO = 46;&#xd;
var AVALIACAO = 9;&#xd;
var AVALIAR = 10;&#xd;
var VALIDACAO = 11;&#xd;
//var GERAR_TIT = 80;&#xd;
var INCLUIR_PAG = 11;&#xd;
//var SEPARACAO = 32;&#xd;
var CORRECAO = 12;&#xd;
var PROGRAMAR = 13;&#xd;
var IMOBILIZADO = 14;&#xd;
var APROV_SOLIC = 15;&#xd;
var SOLUCAO_INC = 16; &#xd;
var ATUALIZA_SLA_1 = 49;&#xd;
var ATUALIZA_SLA_2 = 52;&#xd;
var EXCLUSIVO_VALIDAR_PROGRAMAR = 55;&#xd;
var FIM = 40;&#xd;
&#xd;
&#xd;
&#xd;
var INICIO = 0;&#xd;
var INICIO1 = 8;&#xd;
var GESTOR = 9;&#xd;
var CORRIGIR = 12;</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list>
    <AdvancedProcessProperties>
      <advancedProcessPropertiesPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <propertyId>AutomaticTasks</propertyId>
        <version>15</version>
      </advancedProcessPropertiesPK>
      <propertieValue>43,49,52</propertieValue>
    </AdvancedProcessProperties>
  </list>
  <list>
    <SwimLane>
      <color>82b0b7</color>
      <height>145</height>
      <width>1069</width>
      <positionX>0</positionX>
      <positionY>0</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>82b0b7</color>
      <height>229</height>
      <width>1069</width>
      <positionX>0</positionX>
      <positionY>648</positionY>
      <stateName>Aprovação</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>adc9ac</color>
      <height>145</height>
      <width>1069</width>
      <positionX>0</positionX>
      <positionY>144</positionY>
      <stateName>Gestor</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>d0daae</color>
      <height>145</height>
      <width>1069</width>
      <positionX>0</positionX>
      <positionY>288</positionY>
      <stateName>Fiscal</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>d6e0d0</color>
      <height>217</height>
      <width>1069</width>
      <positionX>0</positionX>
      <positionY>432</positionY>
      <stateName>Financeiro</stateName>
      <type>2</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>1</version>
        <sequence>5</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>61</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>520</positionX>
      <positionY>592</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>63</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>184</positionX>
      <positionY>484</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>65</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>884</positionX>
      <positionY>589</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>65</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>885</positionX>
      <positionY>72</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>66</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>370</positionX>
      <positionY>291</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>66</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>370</positionX>
      <positionY>447</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>66</linkSequence>
        <bendSequence>3</bendSequence>
      </processLinkBendPK>
      <positionX>604</positionX>
      <positionY>447</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>67</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>522</positionX>
      <positionY>115</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>67</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>340</positionX>
      <positionY>115</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>73</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>88</positionX>
      <positionY>97</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <linkSequence>74</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>160</positionX>
      <positionY>192</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list>
    <ExtendedPropertyField>
      <extendedPropertyFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <version>15</version>
        <stateSequence>0</stateSequence>
        <propertyName>AutomaticTasks</propertyName>
      </extendedPropertyFieldPK>
      <propertyType>0</propertyType>
      <propertyDescription>AutomaticTasks</propertyDescription>
      <propertyValue>43,49,52</propertyValue>
      <isDefaultProperty>false</isDefaultProperty>
    </ExtendedPropertyField>
  </list>
  <list>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <fieldId>dtDeVencPgtoGuiaTaxaBoletos</fieldId>
      </processFormFieldPK>
      <fieldDescription>DataVencimento</fieldDescription>
      <slotId>1</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <fieldId>filial</fieldId>
      </processFormFieldPK>
      <fieldDescription>Filial</fieldDescription>
      <slotId>2</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
        <fieldId>filtroDataVencimento</fieldId>
      </processFormFieldPK>
      <fieldDescription>Vencimento</fieldDescription>
      <slotId>3</slotId>
    </ProcessFormField>
  </list>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>SolicitacaoDePagamentoGuiasTaxasBoletos</processId>
      <version>1</version>
      <sequence>68</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list/>
  <list/>
  <list/>
</list>